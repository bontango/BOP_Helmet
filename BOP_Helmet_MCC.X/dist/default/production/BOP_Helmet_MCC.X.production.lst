

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 28 16:51:52 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Version 2.35
    51                           ; Generated 05/05/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F25K42 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     
    86                           	psect	smallconst
    87   000800                     __psmallconst:
    88                           	callstack 0
    89   000800  00                 	db	0
    90   000801                     _pwm_table:
    91                           	callstack 0
    92   000801  0000               	dw	0
    93   000803  0001               	dw	1
    94   000805  0002               	dw	2
    95   000807  0002               	dw	2
    96   000809  0002               	dw	2
    97   00080B  0003               	dw	3
    98   00080D  0003               	dw	3
    99   00080F  0004               	dw	4
   100   000811  0005               	dw	5
   101   000813  0006               	dw	6
   102   000815  0007               	dw	7
   103   000817  0008               	dw	8
   104   000819  000A               	dw	10
   105   00081B  000B               	dw	11
   106   00081D  000D               	dw	13
   107   00081F  0010               	dw	16
   108   000821  0013               	dw	19
   109   000823  0017               	dw	23
   110   000825  001B               	dw	27
   111   000827  0020               	dw	32
   112   000829  0026               	dw	38
   113   00082B  002D               	dw	45
   114   00082D  0036               	dw	54
   115   00082F  0040               	dw	64
   116   000831  004C               	dw	76
   117   000833  005B               	dw	91
   118   000835  006C               	dw	108
   119   000837  0080               	dw	128
   120   000839  0098               	dw	152
   121   00083B  00B5               	dw	181
   122   00083D  00D7               	dw	215
   123   00083F  00FF               	dw	255
   124   000841                     __end_of_pwm_table:
   125                           	callstack 0
   126   000000                     _T4CON	set	16288
   127   000000                     _T2CON	set	16300
   128   000000                     _PIR4bits	set	14756
   129   000000                     _PIE4bits	set	14740
   130   000000                     _PIR5bits	set	14757
   131   000000                     _PIE5bits	set	14741
   132   000000                     _IPR4bits	set	14724
   133   000000                     _T0CON0	set	16312
   134   000000                     _OSCTUNE	set	14814
   135   000000                     _OSCFRQ	set	14815
   136   000841  00                 	db	0	; dummy byte at the end
   137   000000                     
   138                           	psect	nvCOMRAM
   139   00004B                     __pnvCOMRAM:
   140                           	callstack 0
   141   00004B                     _TMR4_InterruptHandler:
   142                           	callstack 0
   143   00004B                     	ds	2
   144   00004D                     _TMR2_InterruptHandler:
   145                           	callstack 0
   146   00004D                     	ds	2
   147   00004F                     _INT1_InterruptHandler:
   148                           	callstack 0
   149   00004F                     	ds	2
   150   000051                     _TMR0_InterruptHandler:
   151                           	callstack 0
   152   000051                     	ds	2
   153   000000                     _LATBbits	set	16315
   154   000000                     _PR4	set	16287
   155   000000                     _TMR4	set	16286
   156   000000                     _T4CONbits	set	16288
   157   000000                     _T4RSTbits	set	16291
   158   000000                     _T4HLTbits	set	16289
   159   000000                     _PR2	set	16299
   160   000000                     _TMR2	set	16298
   161   000000                     _T2CONbits	set	16300
   162   000000                     _T2RSTbits	set	16303
   163   000000                     _T2HLTbits	set	16301
   164   000000                     _T0CON0bits	set	16312
   165   000000                     _IPR3bits	set	14723
   166   000000                     _IPR5bits	set	14725
   167   000000                     _PIE3bits	set	14739
   168   000000                     _PIR3bits	set	14755
   169   000000                     _PMD0	set	14784
   170   000000                     _OSCCON1	set	14809
   171   000000                     _ANSELA	set	14912
   172   000000                     _ANSELB	set	14928
   173   000000                     _ANSELC	set	14944
   174   000000                     _LATA	set	16314
   175   000000                     _TRISA	set	16322
   176   000000                     _LATC	set	16316
   177   000000                     _LATB	set	16315
   178   000000                     _PORTBbits	set	16331
   179   000000                     _INTCON0bits	set	16338
   180   000000                     _TRISC	set	16324
   181   000000                     _TRISB	set	16323
   182   000000                     _INLVLC	set	14948
   183   000000                     _SLRCONC	set	14947
   184   000000                     _ODCONC	set	14946
   185   000000                     _RC3I2C	set	14954
   186   000000                     _WPUC	set	14945
   187   000000                     _WPUE	set	14977
   188   000000                     _INLVLB	set	14932
   189   000000                     _SLRCONB	set	14931
   190   000000                     _ODCONB	set	14930
   191   000000                     _RB1I2C	set	14938
   192   000000                     _WPUB	set	14929
   193   000000                     _INLVLA	set	14916
   194   000000                     _SLRCONA	set	14915
   195   000000                     _ODCONA	set	14914
   196   000000                     _WPUA	set	14913
   197   000000                     _INLVLE	set	14980
   198   000000                     _RB2I2C	set	14939
   199   000000                     _RC4I2C	set	14955
   200   000000                     _INT1PPS	set	15041
   201   000000                     _T4TMR	set	16286
   202   000000                     _T4PR	set	16287
   203   000000                     _T4HLT	set	16289
   204   000000                     _T4CLKCON	set	16290
   205   000000                     _T2TMR	set	16298
   206   000000                     _T2PR	set	16299
   207   000000                     _T2HLT	set	16301
   208   000000                     _T2CLKCON	set	16302
   209   000000                     _TMR0L	set	16310
   210   000000                     _TMR0H	set	16311
   211   000000                     _T0CON1	set	16313
   212   000000                     _OSCCON3	set	14811
   213   000000                     _OSCEN	set	14813
   214   000000                     _PMD7	set	14791
   215   000000                     _PMD6	set	14790
   216   000000                     _PMD5	set	14789
   217   000000                     _PMD4	set	14788
   218   000000                     _PMD3	set	14787
   219   000000                     _PMD2	set	14786
   220   000000                     _PMD1	set	14785
   221   000000                     _IPR7bits	set	14727
   222   000000                     _PIE7bits	set	14743
   223   000000                     _PIR7bits	set	14759
   224   000000                     _T2RST	set	16303
   225   000000                     _T4RST	set	16291
   226                           
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230   0010F8                     __pcinit:
   231                           	callstack 0
   232   0010F8                     start_initialization:
   233                           	callstack 0
   234   0010F8                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Clear objects allocated to COMRAM (57 bytes)
   238   0010F8  EE00  F001         	lfsr	0,__pbssCOMRAM
   239   0010FC  0E39               	movlw	57
   240   0010FE                     clear_0:
   241   0010FE  6AEE               	clrf	postinc0,c
   242   001100  06E8               	decf	wreg,f,c
   243   001102  E1FD               	bnz	clear_0
   244                           
   245                           ;
   246                           ; Setup IVTBASE
   247                           ;
   248   001104  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   249   001106  6ED5               	movwf	213,c
   250   001108  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   251   00110A  6ED6               	movwf	214,c
   252   00110C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   253   00110E  6ED7               	movwf	215,c
   254   001110                     end_of_initialization:
   255                           	callstack 0
   256   001110                     __end_of__initialization:
   257                           	callstack 0
   258   001110  0E00               	movlw	low (__Lmediumconst shr (0+16))
   259   001112  6EF8               	movwf	tblptru,c
   260   001114  0100               	movlb	0
   261   001116  EF21  F004         	goto	_main	;jump to C main() function
   262                           
   263                           	psect	bssCOMRAM
   264   000001                     __pbssCOMRAM:
   265                           	callstack 0
   266   000001                     _pwm_setting:
   267                           	callstack 0
   268   000001                     	ds	32
   269   000021                     _pwm_phase:
   270                           	callstack 0
   271   000021                     	ds	16
   272   000031                     _old_clocks_counter:
   273                           	callstack 0
   274   000031                     	ds	2
   275   000033                     _clocks_counter:
   276                           	callstack 0
   277   000033                     	ds	2
   278   000035                     _lampstatus:
   279                           	callstack 0
   280   000035                     	ds	2
   281   000037                     _lampdata:
   282                           	callstack 0
   283   000037                     	ds	2
   284   000039                     my_pwm_isr@pwm_cnt:
   285                           	callstack 0
   286   000039                     	ds	1
   287                           
   288                           	psect	cstackBANK0
   289   000060                     __pcstackBANK0:
   290                           	callstack 0
   291   000060                     TMR4_Period8BitSet@periodVal:
   292                           	callstack 0
   293   000060                     TMR0_SetInterruptHandler@InterruptHandler:
   294                           	callstack 0
   295   000060                     INT1_SetInterruptHandler@InterruptHandler:
   296                           	callstack 0
   297   000060                     TMR2_SetInterruptHandler@InterruptHandler:
   298                           	callstack 0
   299   000060                     TMR4_SetInterruptHandler@InterruptHandler:
   300                           	callstack 0
   301   000060                     my_delay@val:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x0
   305   000060                     	ds	2
   306   000062                     ??_my_delay:
   307                           
   308                           ; 1 bytes @ 0x2
   309   000062                     	ds	2
   310   000064                     my_delay@i:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x4
   314   000064                     	ds	2
   315   000066                     ??_main:
   316                           
   317                           ; 1 bytes @ 0x6
   318   000066                     	ds	3
   319   000069                     main@fading_level:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x9
   323   000069                     	ds	1
   324   00006A                     main@mode:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xA
   328   00006A                     	ds	1
   329   00006B                     main@i:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xB
   333   00006B                     	ds	1
   334                           
   335                           	psect	cstackCOMRAM
   336   00003A                     __pcstackCOMRAM:
   337                           	callstack 0
   338   00003A                     ??_my_fading_isr:
   339   00003A                     
   340                           ; 1 bytes @ 0x0
   341   00003A                     	ds	3
   342   00003D                     my_fading_isr@io:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x3
   346   00003D                     	ds	1
   347   00003E                     ??_INTERRUPT_InterruptManagerHigh:
   348                           
   349                           ; 1 bytes @ 0x4
   350   00003E                     	ds	6
   351   000044                     ??_my_pwm_isr:
   352                           
   353                           ; 1 bytes @ 0xA
   354   000044                     	ds	2
   355   000046                     my_pwm_isr@tmp1:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0xC
   359   000046                     	ds	1
   360   000047                     my_pwm_isr@tmp2:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xD
   364   000047                     	ds	1
   365   000048                     ??_INTERRUPT_InterruptManagerLow:
   366                           
   367                           ; 1 bytes @ 0xE
   368   000048                     	ds	3
   369                           
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 170 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  i               1   11[BANK0 ] unsigned char 
   380 ;;  mode            1   10[BANK0 ] unsigned char 
   381 ;;  fading_level    1    9[BANK0 ] unsigned char 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   391 ;;      Params:         0       0       0       0       0       0       0       0       0
   392 ;;      Locals:         0       3       0       0       0       0       0       0       0
   393 ;;      Temps:          0       3       0       0       0       0       0       0       0
   394 ;;      Totals:         0       6       0       0       0       0       0       0       0
   395 ;;Total ram usage:        6 bytes
   396 ;; Hardware stack levels required when called: 10
   397 ;; This function calls:
   398 ;;		_INT1_SetInterruptHandler
   399 ;;		_SYSTEM_Initialize
   400 ;;		_TMR0_SetInterruptHandler
   401 ;;		_TMR0_StartTimer
   402 ;;		_TMR0_StopTimer
   403 ;;		_TMR2_SetInterruptHandler
   404 ;;		_TMR4_Period8BitSet
   405 ;;		_TMR4_SetInterruptHandler
   406 ;;		_my_delay
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text0
   413   000842                     __ptext0:
   414                           	callstack 0
   415   000842                     _main:
   416                           	callstack 21
   417   000842                     
   418                           ;main.c: 173:     SYSTEM_Initialize();
   419   000842  EC8D  F008         	call	_SYSTEM_Initialize	;wreg free
   420   000846                     
   421                           ;main.c: 176:     (INTCON0bits.GIEH = 1);
   422   000846  8ED2               	bsf	210,7,c	;volatile
   423   000848                     
   424                           ;main.c: 179:     (INTCON0bits.GIEL = 1);
   425   000848  8CD2               	bsf	210,6,c	;volatile
   426                           
   427                           ;main.c: 182:     INT1_SetInterruptHandler(my_Int1_Isr);
   428   00084A  0EAE               	movlw	low _my_Int1_Isr
   429   00084C  0100               	movlb	0	; () banked
   430   00084E  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
   431   000850  0E10               	movlw	high _my_Int1_Isr
   432   000852  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
   433   000854  ECD3  F008         	call	_INT1_SetInterruptHandler	;wreg free
   434                           
   435                           ;main.c: 183:     TMR0_SetInterruptHandler(my_antiflicker_isr);
   436   000858  0E2A               	movlw	low _my_antiflicker_isr
   437   00085A  0100               	movlb	0	; () banked
   438   00085C  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
   439   00085E  0E0F               	movlw	high _my_antiflicker_isr
   440   000860  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
   441   000862  ECCE  F008         	call	_TMR0_SetInterruptHandler	;wreg free
   442                           
   443                           ;main.c: 184:     TMR2_SetInterruptHandler(my_pwm_isr);
   444   000866  0E90               	movlw	low _my_pwm_isr
   445   000868  0100               	movlb	0	; () banked
   446   00086A  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
   447   00086C  0E0A               	movlw	high _my_pwm_isr
   448   00086E  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
   449   000870  ECC9  F008         	call	_TMR2_SetInterruptHandler	;wreg free
   450                           
   451                           ;main.c: 185:     TMR4_SetInterruptHandler(my_fading_isr);
   452   000874  0EA2               	movlw	low _my_fading_isr
   453   000876  0100               	movlb	0	; () banked
   454   000878  6F60               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
   455   00087A  0E0C               	movlw	high _my_fading_isr
   456   00087C  6F61               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
   457   00087E  ECC4  F008         	call	_TMR4_SetInterruptHandler	;wreg free
   458   000882                     
   459                           ;main.c: 188: uint8_t i,fading_level;;main.c: 189: uint8_t mode = 0;
   460   000882  0E00               	movlw	0
   461   000884  0100               	movlb	0	; () banked
   462   000886  6F6A               	movwf	main@mode& (0+255),b
   463   000888                     
   464                           ; BSR set to: 0
   465                           ;main.c: 192: for( i=0; i<=15; i++) pwm_setting[i] =0;
   466   000888  0E00               	movlw	0
   467   00088A  6F6B               	movwf	main@i& (0+255),b
   468   00088C                     l1883:
   469                           
   470                           ; BSR set to: 0
   471   00088C  516B               	movf	main@i& (0+255),w,b
   472   00088E  0D02               	mullw	2
   473   000890  50F3               	movf	243,w,c
   474   000892  0F01               	addlw	low _pwm_setting
   475   000894  6ED9               	movwf	fsr2l,c
   476   000896  6ADA               	clrf	fsr2h,c
   477   000898  6ADE               	clrf	postinc2,c
   478   00089A  6ADD               	clrf	postdec2,c
   479   00089C                     
   480                           ; BSR set to: 0
   481   00089C  2B6B               	incf	main@i& (0+255),f,b
   482   00089E                     
   483                           ; BSR set to: 0
   484   00089E  0E0F               	movlw	15
   485   0008A0  656B               	cpfsgt	main@i& (0+255),b
   486   0008A2  EF55  F004         	goto	u701
   487   0008A6  EF57  F004         	goto	u700
   488   0008AA                     u701:
   489   0008AA  EF46  F004         	goto	l1883
   490   0008AE                     u700:
   491   0008AE                     
   492                           ; BSR set to: 0
   493                           ;main.c: 193: lampdata = lampstatus = 0;
   494   0008AE  0E00               	movlw	0
   495   0008B0  6E36               	movwf	(_lampstatus+1)^0,c	;volatile
   496   0008B2  0E00               	movlw	0
   497   0008B4  6E35               	movwf	_lampstatus^0,c	;volatile
   498   0008B6  C035  F037         	movff	_lampstatus,_lampdata	;volatile
   499   0008BA  C036  F038         	movff	_lampstatus+1,_lampdata+1	;volatile
   500                           
   501                           ;main.c: 194: clocks_counter = old_clocks_counter = 0;
   502   0008BE  0E00               	movlw	0
   503   0008C0  6E32               	movwf	(_old_clocks_counter+1)^0,c	;volatile
   504   0008C2  0E00               	movlw	0
   505   0008C4  6E31               	movwf	_old_clocks_counter^0,c	;volatile
   506   0008C6  C031  F033         	movff	_old_clocks_counter,_clocks_counter	;volatile
   507   0008CA  C032  F034         	movff	_old_clocks_counter+1,_clocks_counter+1	;volatile
   508                           
   509                           ;main.c: 197: for( i=0; i<5; i++) {
   510   0008CE  0E00               	movlw	0
   511   0008D0  6F6B               	movwf	main@i& (0+255),b
   512   0008D2                     l505:
   513                           
   514                           ; BSR set to: 0
   515   0008D2  86BB               	bsf	187,3,c	;volatile
   516   0008D4                     
   517                           ; BSR set to: 0
   518   0008D4  84BB               	bsf	187,2,c	;volatile
   519   0008D6                     
   520                           ; BSR set to: 0
   521                           ;main.c: 199:     my_delay(2);
   522   0008D6  0E00               	movlw	0
   523   0008D8  6F61               	movwf	(my_delay@val+1)& (0+255),b
   524   0008DA  0E02               	movlw	2
   525   0008DC  6F60               	movwf	my_delay@val& (0+255),b
   526   0008DE  EC6E  F007         	call	_my_delay	;wreg free
   527   0008E2  96BB               	bcf	187,3,c	;volatile
   528   0008E4  94BB               	bcf	187,2,c	;volatile
   529   0008E6                     
   530                           ;main.c: 201:     my_delay(2);
   531   0008E6  0E00               	movlw	0
   532   0008E8  0100               	movlb	0	; () banked
   533   0008EA  6F61               	movwf	(my_delay@val+1)& (0+255),b
   534   0008EC  0E02               	movlw	2
   535   0008EE  6F60               	movwf	my_delay@val& (0+255),b
   536   0008F0  EC6E  F007         	call	_my_delay	;wreg free
   537   0008F4                     
   538                           ;main.c: 202: }
   539   0008F4  0100               	movlb	0	; () banked
   540   0008F6  2B6B               	incf	main@i& (0+255),f,b
   541   0008F8                     
   542                           ; BSR set to: 0
   543   0008F8  0E04               	movlw	4
   544   0008FA  656B               	cpfsgt	main@i& (0+255),b
   545   0008FC  EF82  F004         	goto	u711
   546   000900  EF84  F004         	goto	u710
   547   000904                     u711:
   548   000904  EF69  F004         	goto	l505
   549   000908                     u710:
   550   000908                     
   551                           ; BSR set to: 0
   552   000908  86BB               	bsf	187,3,c	;volatile
   553   00090A                     
   554                           ; BSR set to: 0
   555   00090A  94BB               	bcf	187,2,c	;volatile
   556   00090C                     
   557                           ; BSR set to: 0
   558                           ;main.c: 208: (INTCON0bits.GIE = 1);
   559   00090C  8ED2               	bsf	210,7,c	;volatile
   560   00090E                     l1905:
   561                           
   562                           ;main.c: 213:      fading_level = PORTBbits.RB5 + PORTBbits.RB4 + PORTBbits.RB4;
   563   00090E  B8CB               	btfsc	203,4,c	;volatile
   564   000910  EF8C  F004         	goto	u721
   565   000914  EF91  F004         	goto	u720
   566   000918                     u721:
   567   000918  0100               	movlb	0	; () banked
   568   00091A  6B66               	clrf	??_main& (0+255),b
   569   00091C  2B66               	incf	??_main& (0+255),f,b
   570   00091E  EF93  F004         	goto	u728
   571   000922                     u720:
   572   000922  0100               	movlb	0	; () banked
   573   000924  6B66               	clrf	??_main& (0+255),b
   574   000926                     u728:
   575   000926  B8CB               	btfsc	203,4,c	;volatile
   576   000928  EF98  F004         	goto	u731
   577   00092C  EF9C  F004         	goto	u730
   578   000930                     u731:
   579   000930  6B67               	clrf	(??_main+1)& (0+255),b
   580   000932  2B67               	incf	(??_main+1)& (0+255),f,b
   581   000934  EF9E  F004         	goto	u738
   582   000938                     u730:
   583   000938  0100               	movlb	0	; () banked
   584   00093A  6B67               	clrf	(??_main+1)& (0+255),b
   585   00093C                     u738:
   586   00093C  BACB               	btfsc	203,5,c	;volatile
   587   00093E  EFA3  F004         	goto	u741
   588   000942  EFA6  F004         	goto	u740
   589   000946                     u741:
   590   000946  0E01               	movlw	1
   591   000948  EFA7  F004         	goto	u746
   592   00094C                     u740:
   593   00094C  0E00               	movlw	0
   594   00094E                     u746:
   595   00094E  2567               	addwf	(??_main+1)& (0+255),w,b
   596   000950  2566               	addwf	??_main& (0+255),w,b
   597   000952  6F69               	movwf	main@fading_level& (0+255),b
   598                           
   599                           ;main.c: 214:      switch(fading_level) {
   600   000954  EFC0  F004         	goto	l1917
   601   000958                     l1907:
   602                           
   603                           ; BSR set to: 0
   604   000958  0E3C               	movlw	60
   605   00095A  ECBE  F008         	call	_TMR4_Period8BitSet
   606                           
   607                           ;main.c: 216:                  break;
   608   00095E  EFD3  F004         	goto	l520
   609   000962                     l1909:
   610                           
   611                           ; BSR set to: 0
   612   000962  0E50               	movlw	80
   613   000964  ECBE  F008         	call	_TMR4_Period8BitSet
   614                           
   615                           ;main.c: 218:                  break;
   616   000968  EFD3  F004         	goto	l520
   617   00096C                     l1911:
   618                           
   619                           ; BSR set to: 0
   620   00096C  0E28               	movlw	40
   621   00096E  ECBE  F008         	call	_TMR4_Period8BitSet
   622                           
   623                           ;main.c: 220:                  break;
   624   000972  EFD3  F004         	goto	l520
   625   000976                     l1913:
   626                           
   627                           ; BSR set to: 0
   628   000976  0E03               	movlw	3
   629   000978  ECBE  F008         	call	_TMR4_Period8BitSet
   630                           
   631                           ;main.c: 222:                  break;
   632   00097C  EFD3  F004         	goto	l520
   633   000980                     l1917:
   634                           
   635                           ; BSR set to: 0
   636   000980  5169               	movf	main@fading_level& (0+255),w,b
   637                           
   638                           ; Switch size 1, requested type "simple"
   639                           ; Number of cases is 4, Range of values is 0 to 3
   640                           ; switch strategies available:
   641                           ; Name         Instructions Cycles
   642                           ; simple_byte           13     7 (average)
   643                           ;	Chosen strategy is simple_byte
   644   000982  0A00               	xorlw	0	; case 0
   645   000984  B4D8               	btfsc	status,2,c
   646   000986  EFBB  F004         	goto	l1913
   647   00098A  0A01               	xorlw	1	; case 1
   648   00098C  B4D8               	btfsc	status,2,c
   649   00098E  EFB6  F004         	goto	l1911
   650   000992  0A03               	xorlw	3	; case 2
   651   000994  B4D8               	btfsc	status,2,c
   652   000996  EFB1  F004         	goto	l1909
   653   00099A  0A01               	xorlw	1	; case 3
   654   00099C  B4D8               	btfsc	status,2,c
   655   00099E  EFAC  F004         	goto	l1907
   656   0009A2  EFD3  F004         	goto	l520
   657   0009A6                     l520:
   658                           
   659                           ;main.c: 225:      if ( PORTBbits.RB7 == 0) { mode = 1; }
   660   0009A6  BECB               	btfsc	203,7,c	;volatile
   661   0009A8  EFD8  F004         	goto	u751
   662   0009AC  EFDA  F004         	goto	u750
   663   0009B0                     u751:
   664   0009B0  EFDD  F004         	goto	l524
   665   0009B4                     u750:
   666   0009B4  0E01               	movlw	1
   667   0009B6  0100               	movlb	0	; () banked
   668   0009B8  6F6A               	movwf	main@mode& (0+255),b
   669   0009BA                     l524:
   670                           
   671                           ;main.c: 227:      if ( mode == 0 ) {
   672   0009BA  0100               	movlb	0	; () banked
   673   0009BC  516A               	movf	main@mode& (0+255),w,b
   674   0009BE  A4D8               	btfss	status,2,c
   675   0009C0  EFE4  F004         	goto	u761
   676   0009C4  EFE6  F004         	goto	u760
   677   0009C8                     u761:
   678   0009C8  EFED  F004         	goto	l525
   679   0009CC                     u760:
   680   0009CC                     
   681                           ; BSR set to: 0
   682                           ;main.c: 230:      LATBbits.LATB2 = PORTBbits.RB1;
   683   0009CC  A2CB               	btfss	203,1,c	;volatile
   684   0009CE  D002               	bra	u775
   685   0009D0  84BB               	bsf	187,2,c	;volatile
   686   0009D2  D001               	bra	u777
   687   0009D4                     u775:
   688   0009D4  94BB               	bcf	187,2,c	;volatile
   689   0009D6                     u777:
   690                           
   691                           ;main.c: 232:      }
   692   0009D6  EF87  F004         	goto	l1905
   693   0009DA                     l525:
   694                           
   695                           ; BSR set to: 0
   696                           ;main.c: 235:          (PIE5bits.INT1IE = 0);
   697   0009DA  0139               	movlb	57	; () banked
   698   0009DC  9195               	bcf	149,0,b	;volatile
   699   0009DE                     
   700                           ; BSR set to: 57
   701                           ;main.c: 236:          TMR0_StopTimer();
   702   0009DE  ECDD  F008         	call	_TMR0_StopTimer	;wreg free
   703   0009E2                     
   704                           ;main.c: 238:          lampstatus = 0;
   705   0009E2  0E00               	movlw	0
   706   0009E4  6E36               	movwf	(_lampstatus+1)^0,c	;volatile
   707   0009E6  0E00               	movlw	0
   708   0009E8  6E35               	movwf	_lampstatus^0,c	;volatile
   709   0009EA                     
   710                           ;main.c: 239:          for ( i=0; i<=15; i++) {
   711   0009EA  0E00               	movlw	0
   712   0009EC  0100               	movlb	0	; () banked
   713   0009EE  6F6B               	movwf	main@i& (0+255),b
   714   0009F0                     l1933:
   715                           
   716                           ; BSR set to: 0
   717                           ;main.c: 240:              lampstatus |= (1 << i);
   718   0009F0  C06B  F066         	movff	main@i,??_main
   719   0009F4  0E01               	movlw	1
   720   0009F6  6F67               	movwf	(??_main+1)& (0+255),b
   721   0009F8  0E00               	movlw	0
   722   0009FA  6F68               	movwf	(??_main+2)& (0+255),b
   723   0009FC  2B66               	incf	??_main& (0+255),f,b
   724   0009FE  EF04  F005         	goto	u784
   725   000A02                     u785:
   726   000A02  90D8               	bcf	status,0,c
   727   000A04  3767               	rlcf	(??_main+1)& (0+255),f,b
   728   000A06  3768               	rlcf	(??_main+2)& (0+255),f,b
   729   000A08                     u784:
   730   000A08  2F66               	decfsz	??_main& (0+255),f,b
   731   000A0A  EF01  F005         	goto	u785
   732   000A0E  0100               	movlb	0	; () banked
   733   000A10  5167               	movf	(??_main+1)& (0+255),w,b
   734   000A12  1235               	iorwf	_lampstatus^0,f,c	;volatile
   735   000A14  5168               	movf	(??_main+2)& (0+255),w,b
   736   000A16  1236               	iorwf	(_lampstatus+1)^0,f,c	;volatile
   737   000A18                     
   738                           ; BSR set to: 0
   739                           ;main.c: 241:              my_delay(2);
   740   000A18  0E00               	movlw	0
   741   000A1A  6F61               	movwf	(my_delay@val+1)& (0+255),b
   742   000A1C  0E02               	movlw	2
   743   000A1E  6F60               	movwf	my_delay@val& (0+255),b
   744   000A20  EC6E  F007         	call	_my_delay	;wreg free
   745   000A24                     
   746                           ;main.c: 243:              if ( PORTBbits.RB6 == 0) {
   747   000A24  BCCB               	btfsc	203,6,c	;volatile
   748   000A26  EF17  F005         	goto	u791
   749   000A2A  EF19  F005         	goto	u790
   750   000A2E                     u791:
   751   000A2E  EF1E  F005         	goto	l1941
   752   000A32                     u790:
   753   000A32                     
   754                           ;main.c: 244:                  mode = 0;
   755   000A32  0E00               	movlw	0
   756   000A34  0100               	movlb	0	; () banked
   757   000A36  6F6A               	movwf	main@mode& (0+255),b
   758                           
   759                           ;main.c: 245:                  break;
   760   000A38  EF37  F005         	goto	l1949
   761   000A3C                     l1941:
   762                           
   763                           ;main.c: 247:              lampstatus = 0;
   764   000A3C  0E00               	movlw	0
   765   000A3E  6E36               	movwf	(_lampstatus+1)^0,c	;volatile
   766   000A40  0E00               	movlw	0
   767   000A42  6E35               	movwf	_lampstatus^0,c	;volatile
   768   000A44                     
   769                           ;main.c: 248:              if ( PORTBbits.RB2 == 0) do { LATBbits.LATB2 = 1; } while(0);
      +                           else do { LATBbits.LATB2 = 0; } while(0);
   770   000A44  B4CB               	btfsc	203,2,c	;volatile
   771   000A46  EF27  F005         	goto	u801
   772   000A4A  EF29  F005         	goto	u800
   773   000A4E                     u801:
   774   000A4E  EF2C  F005         	goto	l534
   775   000A52                     u800:
   776   000A52  84BB               	bsf	187,2,c	;volatile
   777   000A54  EF2D  F005         	goto	l1945
   778   000A58                     l534:
   779   000A58  94BB               	bcf	187,2,c	;volatile
   780   000A5A                     l1945:
   781                           
   782                           ;main.c: 249:             }
   783   000A5A  0100               	movlb	0	; () banked
   784   000A5C  2B6B               	incf	main@i& (0+255),f,b
   785   000A5E                     
   786                           ; BSR set to: 0
   787   000A5E  0E0F               	movlw	15
   788   000A60  656B               	cpfsgt	main@i& (0+255),b
   789   000A62  EF35  F005         	goto	u811
   790   000A66  EF37  F005         	goto	u810
   791   000A6A                     u811:
   792   000A6A  EFF8  F004         	goto	l1933
   793   000A6E                     u810:
   794   000A6E                     l1949:
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 250:          if ( mode == 0 ) {
   798   000A6E  516A               	movf	main@mode& (0+255),w,b
   799   000A70  A4D8               	btfss	status,2,c
   800   000A72  EF3D  F005         	goto	u821
   801   000A76  EF3F  F005         	goto	u820
   802   000A7A                     u821:
   803   000A7A  EF87  F004         	goto	l1905
   804   000A7E                     u820:
   805   000A7E                     
   806                           ; BSR set to: 0
   807                           ;main.c: 251:             (PIE5bits.INT1IE = 1);
   808   000A7E  0139               	movlb	57	; () banked
   809   000A80  8195               	bsf	149,0,b	;volatile
   810   000A82                     
   811                           ; BSR set to: 57
   812                           ;main.c: 252:             TMR0_StartTimer();
   813   000A82  ECDF  F008         	call	_TMR0_StartTimer	;wreg free
   814   000A86  94BB               	bcf	187,2,c	;volatile
   815   000A88  EF87  F004         	goto	l1905
   816   000A8C  EF0E  F000         	goto	start
   817   000A90                     __end_of_main:
   818                           	callstack 0
   819                           
   820 ;; *************** function _my_delay *****************
   821 ;; Defined at:
   822 ;;		line 153 in file "main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  val             2    0[BANK0 ] int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  i               2    4[BANK0 ] int 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   836 ;;      Params:         0       2       0       0       0       0       0       0       0
   837 ;;      Locals:         0       2       0       0       0       0       0       0       0
   838 ;;      Temps:          0       2       0       0       0       0       0       0       0
   839 ;;      Totals:         0       6       0       0       0       0       0       0       0
   840 ;;Total ram usage:        6 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; Hardware stack levels required when called: 7
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text1
   851   000EDC                     __ptext1:
   852                           	callstack 0
   853   000EDC                     _my_delay:
   854                           	callstack 23
   855   000EDC                     
   856                           ;main.c: 154:     int i;;main.c: 156:     for( i=0; i<=val; i++)
   857   000EDC  0E00               	movlw	0
   858   000EDE  0100               	movlb	0	; () banked
   859   000EE0  6F65               	movwf	(my_delay@i+1)& (0+255),b
   860   000EE2  0E00               	movlw	0
   861   000EE4  6F64               	movwf	my_delay@i& (0+255),b
   862   000EE6  EF85  F007         	goto	l493
   863   000EEA                     l1863:
   864                           
   865                           ; BSR set to: 0
   866                           ;main.c: 157:     {;main.c: 158:         _delay((unsigned long)((100)*(64000000/4000.0))
      +                          );
   867   000EEA  0E09               	movlw	9
   868   000EEC  0100               	movlb	0	; () banked
   869   000EEE  6F63               	movwf	(??_my_delay+1)& (0+255),b
   870   000EF0  0E1E               	movlw	30
   871   000EF2  6F62               	movwf	??_my_delay& (0+255),b
   872   000EF4  0EE4               	movlw	228
   873   000EF6                     u837:
   874   000EF6  2EE8               	decfsz	wreg,f,c
   875   000EF8  D7FE               	bra	u837
   876   000EFA  2F62               	decfsz	??_my_delay& (0+255),f,b
   877   000EFC  D7FC               	bra	u837
   878   000EFE  2F63               	decfsz	(??_my_delay+1)& (0+255),f,b
   879   000F00  D7FA               	bra	u837
   880   000F02  0000               	nop	
   881   000F04                     
   882                           ;main.c: 159:     }
   883   000F04  0100               	movlb	0	; () banked
   884   000F06  4B64               	infsnz	my_delay@i& (0+255),f,b
   885   000F08  2B65               	incf	(my_delay@i+1)& (0+255),f,b
   886   000F0A                     l493:
   887                           
   888                           ; BSR set to: 0
   889   000F0A  5164               	movf	my_delay@i& (0+255),w,b
   890   000F0C  5D60               	subwf	my_delay@val& (0+255),w,b
   891   000F0E  5161               	movf	(my_delay@val+1)& (0+255),w,b
   892   000F10  0A80               	xorlw	128
   893   000F12  6F62               	movwf	??_my_delay& (0+255),b
   894   000F14  5165               	movf	(my_delay@i+1)& (0+255),w,b
   895   000F16  0A80               	xorlw	128
   896   000F18  5962               	subwfb	??_my_delay& (0+255),w,b
   897   000F1A  B0D8               	btfsc	status,0,c
   898   000F1C  EF92  F007         	goto	u691
   899   000F20  EF94  F007         	goto	u690
   900   000F24                     u691:
   901   000F24  EF75  F007         	goto	l1863
   902   000F28                     u690:
   903   000F28                     
   904                           ; BSR set to: 0
   905   000F28  0012               	return		;funcret
   906   000F2A                     __end_of_my_delay:
   907                           	callstack 0
   908                           
   909 ;; *************** function _TMR4_Period8BitSet *****************
   910 ;; Defined at:
   911 ;;		line 155 in file "mcc_generated_files/tmr4.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  periodVal       1    wreg     unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  periodVal       1    0[BANK0 ] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   925 ;;      Params:         0       0       0       0       0       0       0       0       0
   926 ;;      Locals:         0       1       0       0       0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0       0       0       0       0
   928 ;;      Totals:         0       1       0       0       0       0       0       0       0
   929 ;;Total ram usage:        1 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; Hardware stack levels required when called: 7
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_main
   936 ;;		_TMR4_LoadPeriodRegister
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text2
   941   00117C                     __ptext2:
   942                           	callstack 0
   943   00117C                     _TMR4_Period8BitSet:
   944                           	callstack 23
   945                           
   946                           ; BSR set to: 0
   947                           ;incstack = 0
   948                           ;TMR4_Period8BitSet@periodVal stored from wreg
   949   00117C  0100               	movlb	0	; () banked
   950   00117E  6F60               	movwf	TMR4_Period8BitSet@periodVal& (0+255),b
   951   001180                     
   952                           ;mcc_generated_files/tmr4.c: 155: void TMR4_Period8BitSet(uint8_t periodVal);mcc_generat
      +                          ed_files/tmr4.c: 156: {;mcc_generated_files/tmr4.c: 157:    PR4 = periodVal;
   953   001180  0060  F183  FF9F   	movff	TMR4_Period8BitSet@periodVal,16287	;volatile
   954   001186  0012               	return		;funcret
   955   001188                     __end_of_TMR4_Period8BitSet:
   956                           	callstack 0
   957                           
   958 ;; *************** function _TMR0_StopTimer *****************
   959 ;; Defined at:
   960 ;;		line 93 in file "mcc_generated_files/tmr0.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		None
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   974 ;;      Params:         0       0       0       0       0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0
   977 ;;      Totals:         0       0       0       0       0       0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 7
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text3
   989   0011BA                     __ptext3:
   990                           	callstack 0
   991   0011BA                     _TMR0_StopTimer:
   992                           	callstack 23
   993   0011BA                     
   994                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
   995   0011BA  9EB8               	bcf	184,7,c	;volatile
   996   0011BC  0012               	return		;funcret
   997   0011BE                     __end_of_TMR0_StopTimer:
   998                           	callstack 0
   999                           
  1000 ;; *************** function _TMR0_StartTimer *****************
  1001 ;; Defined at:
  1002 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		None
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 7
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text4
  1031   0011BE                     __ptext4:
  1032                           	callstack 0
  1033   0011BE                     _TMR0_StartTimer:
  1034                           	callstack 23
  1035   0011BE                     
  1036                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
  1037   0011BE  8EB8               	bsf	184,7,c	;volatile
  1038   0011C0  0012               	return		;funcret
  1039   0011C2                     __end_of_TMR0_StartTimer:
  1040                           	callstack 0
  1041                           
  1042 ;; *************** function _SYSTEM_Initialize *****************
  1043 ;; Defined at:
  1044 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 9
  1065 ;; This function calls:
  1066 ;;		_EXT_INT_Initialize
  1067 ;;		_INTERRUPT_Initialize
  1068 ;;		_OSCILLATOR_Initialize
  1069 ;;		_PIN_MANAGER_Initialize
  1070 ;;		_PMD_Initialize
  1071 ;;		_TMR0_Initialize
  1072 ;;		_TMR2_Initialize
  1073 ;;		_TMR4_Initialize
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text5
  1080   00111A                     __ptext5:
  1081                           	callstack 0
  1082   00111A                     _SYSTEM_Initialize:
  1083                           	callstack 21
  1084   00111A                     
  1085                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1086   00111A  ECB7  F008         	call	_INTERRUPT_Initialize	;wreg free
  1087   00111E                     
  1088                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1089   00111E  EC6A  F008         	call	_PMD_Initialize	;wreg free
  1090   001122                     
  1091                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1092   001122  EC3A  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  1093   001126                     
  1094                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1095   001126  ECAB  F008         	call	_OSCILLATOR_Initialize	;wreg free
  1096   00112A                     
  1097                           ;mcc_generated_files/mcc.c: 56:     TMR4_Initialize();
  1098   00112A  ECFF  F007         	call	_TMR4_Initialize	;wreg free
  1099   00112E                     
  1100                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  1101   00112E  EC16  F008         	call	_TMR2_Initialize	;wreg free
  1102   001132                     
  1103                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
  1104   001132  EC9E  F008         	call	_EXT_INT_Initialize	;wreg free
  1105   001136                     
  1106                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  1107   001136  EC44  F008         	call	_TMR0_Initialize	;wreg free
  1108   00113A  0012               	return		;funcret
  1109   00113C                     __end_of_SYSTEM_Initialize:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function _TMR4_Initialize *****************
  1113 ;; Defined at:
  1114 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1128 ;;      Params:         0       0       0       0       0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1131 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; Hardware stack levels required when called: 8
  1135 ;; This function calls:
  1136 ;;		_TMR4_SetInterruptHandler
  1137 ;; This function is called by:
  1138 ;;		_SYSTEM_Initialize
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text6
  1143   000FFE                     __ptext6:
  1144                           	callstack 0
  1145   000FFE                     _TMR4_Initialize:
  1146                           	callstack 21
  1147   000FFE                     
  1148                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x06;
  1149   000FFE  0E06               	movlw	6
  1150   001000  6EA2               	movwf	162,c	;volatile
  1151                           
  1152                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x00;
  1153   001002  0E00               	movlw	0
  1154   001004  6EA1               	movwf	161,c	;volatile
  1155                           
  1156                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  1157   001006  0E00               	movlw	0
  1158   001008  6EA3               	movwf	163,c	;volatile
  1159                           
  1160                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0x63;
  1161   00100A  0E63               	movlw	99
  1162   00100C  6E9F               	movwf	159,c	;volatile
  1163                           
  1164                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  1165   00100E  0E00               	movlw	0
  1166   001010  6E9E               	movwf	158,c	;volatile
  1167   001012                     
  1168                           ;mcc_generated_files/tmr4.c: 84:     PIR7bits.TMR4IF = 0;
  1169   001012  0139               	movlb	57	; () banked
  1170   001014  91A7               	bcf	167,0,b	;volatile
  1171   001016                     
  1172                           ; BSR set to: 57
  1173                           ;mcc_generated_files/tmr4.c: 87:     PIE7bits.TMR4IE = 1;
  1174   001016  8197               	bsf	151,0,b	;volatile
  1175   001018                     
  1176                           ; BSR set to: 57
  1177                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  1178   001018  0EC6               	movlw	low _TMR4_DefaultInterruptHandler
  1179   00101A  0100               	movlb	0	; () banked
  1180   00101C  6F60               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  1181   00101E  0E11               	movlw	high _TMR4_DefaultInterruptHandler
  1182   001020  6F61               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1183   001022  ECC4  F008         	call	_TMR4_SetInterruptHandler	;wreg free
  1184   001026                     
  1185                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xA0;
  1186   001026  0EA0               	movlw	160
  1187   001028  6EA0               	movwf	160,c	;volatile
  1188   00102A  0012               	return		;funcret
  1189   00102C                     __end_of_TMR4_Initialize:
  1190                           	callstack 0
  1191                           
  1192 ;; *************** function _TMR4_SetInterruptHandler *****************
  1193 ;; Defined at:
  1194 ;;		line 178 in file "mcc_generated_files/tmr4.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1197 ;;		 -> my_fading_isr(1), TMR4_DefaultInterruptHandler(1), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1209 ;;      Params:         0       2       0       0       0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1212 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1213 ;;Total ram usage:        2 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 7
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_TMR4_Initialize
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text7
  1225   001188                     __ptext7:
  1226                           	callstack 0
  1227   001188                     _TMR4_SetInterruptHandler:
  1228                           	callstack 23
  1229   001188                     
  1230                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
  1231   001188  C060  F04B         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  1232   00118C  C061  F04C         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  1233   001190  0012               	return		;funcret
  1234   001192                     __end_of_TMR4_SetInterruptHandler:
  1235                           	callstack 0
  1236                           
  1237 ;; *************** function _TMR2_Initialize *****************
  1238 ;; Defined at:
  1239 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1253 ;;      Params:         0       0       0       0       0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 8
  1260 ;; This function calls:
  1261 ;;		_TMR2_SetInterruptHandler
  1262 ;; This function is called by:
  1263 ;;		_SYSTEM_Initialize
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text8
  1268   00102C                     __ptext8:
  1269                           	callstack 0
  1270   00102C                     _TMR2_Initialize:
  1271                           	callstack 21
  1272   00102C                     
  1273                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  1274   00102C  0E01               	movlw	1
  1275   00102E  6EAE               	movwf	174,c	;volatile
  1276                           
  1277                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  1278   001030  0E00               	movlw	0
  1279   001032  6EAD               	movwf	173,c	;volatile
  1280                           
  1281                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  1282   001034  0E00               	movlw	0
  1283   001036  6EAF               	movwf	175,c	;volatile
  1284                           
  1285                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9F;
  1286   001038  0E9F               	movlw	159
  1287   00103A  6EAB               	movwf	171,c	;volatile
  1288                           
  1289                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  1290   00103C  0E00               	movlw	0
  1291   00103E  6EAA               	movwf	170,c	;volatile
  1292   001040                     
  1293                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  1294   001040  0139               	movlb	57	; () banked
  1295   001042  95A4               	bcf	164,2,b	;volatile
  1296   001044                     
  1297                           ; BSR set to: 57
  1298                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  1299   001044  8594               	bsf	148,2,b	;volatile
  1300   001046                     
  1301                           ; BSR set to: 57
  1302                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  1303   001046  0EC2               	movlw	low _TMR2_DefaultInterruptHandler
  1304   001048  0100               	movlb	0	; () banked
  1305   00104A  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  1306   00104C  0E11               	movlw	high _TMR2_DefaultInterruptHandler
  1307   00104E  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1308   001050  ECC9  F008         	call	_TMR2_SetInterruptHandler	;wreg free
  1309   001054                     
  1310                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xA0;
  1311   001054  0EA0               	movlw	160
  1312   001056  6EAC               	movwf	172,c	;volatile
  1313   001058  0012               	return		;funcret
  1314   00105A                     __end_of_TMR2_Initialize:
  1315                           	callstack 0
  1316                           
  1317 ;; *************** function _TMR2_SetInterruptHandler *****************
  1318 ;; Defined at:
  1319 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1322 ;;		 -> my_pwm_isr(1), TMR2_DefaultInterruptHandler(1), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1334 ;;      Params:         0       2       0       0       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1337 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; Hardware stack levels required when called: 7
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_TMR2_Initialize
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text9
  1350   001192                     __ptext9:
  1351                           	callstack 0
  1352   001192                     _TMR2_SetInterruptHandler:
  1353                           	callstack 23
  1354   001192                     
  1355                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  1356   001192  C060  F04D         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1357   001196  C061  F04E         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1358   00119A  0012               	return		;funcret
  1359   00119C                     __end_of_TMR2_SetInterruptHandler:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _TMR0_Initialize *****************
  1363 ;; Defined at:
  1364 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1378 ;;      Params:         0       0       0       0       0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1381 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1382 ;;Total ram usage:        0 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; Hardware stack levels required when called: 8
  1385 ;; This function calls:
  1386 ;;		_TMR0_SetInterruptHandler
  1387 ;; This function is called by:
  1388 ;;		_SYSTEM_Initialize
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text10
  1393   001088                     __ptext10:
  1394                           	callstack 0
  1395   001088                     _TMR0_Initialize:
  1396                           	callstack 21
  1397   001088                     
  1398                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x4B;
  1399   001088  0E4B               	movlw	75
  1400   00108A  6EB9               	movwf	185,c	;volatile
  1401                           
  1402                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x9B;
  1403   00108C  0E9B               	movlw	155
  1404   00108E  6EB7               	movwf	183,c	;volatile
  1405                           
  1406                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  1407   001090  0E00               	movlw	0
  1408   001092  6EB6               	movwf	182,c	;volatile
  1409   001094                     
  1410                           ;mcc_generated_files/tmr0.c: 75:     PIR3bits.TMR0IF = 0;
  1411   001094  0139               	movlb	57	; () banked
  1412   001096  9FA3               	bcf	163,7,b	;volatile
  1413   001098                     
  1414                           ; BSR set to: 57
  1415                           ;mcc_generated_files/tmr0.c: 78:     PIE3bits.TMR0IE = 1;
  1416   001098  8F93               	bsf	147,7,b	;volatile
  1417   00109A                     
  1418                           ; BSR set to: 57
  1419                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1420   00109A  0EC4               	movlw	low _TMR0_DefaultInterruptHandler
  1421   00109C  0100               	movlb	0	; () banked
  1422   00109E  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1423   0010A0  0E11               	movlw	high _TMR0_DefaultInterruptHandler
  1424   0010A2  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1425   0010A4  ECCE  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  1426   0010A8                     
  1427                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  1428   0010A8  0E80               	movlw	128
  1429   0010AA  6EB8               	movwf	184,c	;volatile
  1430   0010AC  0012               	return		;funcret
  1431   0010AE                     __end_of_TMR0_Initialize:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _TMR0_SetInterruptHandler *****************
  1435 ;; Defined at:
  1436 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1439 ;;		 -> my_antiflicker_isr(1), TMR0_DefaultInterruptHandler(1), 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1451 ;;      Params:         0       2       0       0       0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1454 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1455 ;;Total ram usage:        2 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 7
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_TMR0_Initialize
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text11
  1467   00119C                     __ptext11:
  1468                           	callstack 0
  1469   00119C                     _TMR0_SetInterruptHandler:
  1470                           	callstack 23
  1471   00119C                     
  1472                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  1473   00119C  C060  F051         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1474   0011A0  C061  F052         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1475   0011A4  0012               	return		;funcret
  1476   0011A6                     __end_of_TMR0_SetInterruptHandler:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _PMD_Initialize *****************
  1480 ;; Defined at:
  1481 ;;		line 76 in file "mcc_generated_files/mcc.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 7
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_SYSTEM_Initialize
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text12
  1510   0010D4                     __ptext12:
  1511                           	callstack 0
  1512   0010D4                     _PMD_Initialize:
  1513                           	callstack 22
  1514   0010D4                     
  1515                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  1516   0010D4  0E00               	movlw	0
  1517   0010D6  0139               	movlb	57	; () banked
  1518   0010D8  6FC0               	movwf	192,b	;volatile
  1519                           
  1520                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  1521   0010DA  0E00               	movlw	0
  1522   0010DC  6FC1               	movwf	193,b	;volatile
  1523                           
  1524                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  1525   0010DE  0E00               	movlw	0
  1526   0010E0  6FC2               	movwf	194,b	;volatile
  1527                           
  1528                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  1529   0010E2  0E00               	movlw	0
  1530   0010E4  6FC3               	movwf	195,b	;volatile
  1531                           
  1532                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  1533   0010E6  0E00               	movlw	0
  1534   0010E8  6FC4               	movwf	196,b	;volatile
  1535                           
  1536                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  1537   0010EA  0E00               	movlw	0
  1538   0010EC  6FC5               	movwf	197,b	;volatile
  1539                           
  1540                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
  1541   0010EE  0E00               	movlw	0
  1542   0010F0  6FC6               	movwf	198,b	;volatile
  1543                           
  1544                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
  1545   0010F2  0E00               	movlw	0
  1546   0010F4  6FC7               	movwf	199,b	;volatile
  1547   0010F6                     
  1548                           ; BSR set to: 57
  1549   0010F6  0012               	return		;funcret
  1550   0010F8                     __end_of_PMD_Initialize:
  1551                           	callstack 0
  1552                           
  1553 ;; *************** function _PIN_MANAGER_Initialize *****************
  1554 ;; Defined at:
  1555 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1572 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1573 ;;Total ram usage:        0 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; Hardware stack levels required when called: 7
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_SYSTEM_Initialize
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text13
  1584   000E74                     __ptext13:
  1585                           	callstack 0
  1586   000E74                     _PIN_MANAGER_Initialize:
  1587                           	callstack 22
  1588   000E74                     
  1589                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1590   000E74  0E00               	movlw	0
  1591   000E76  6EBA               	movwf	186,c	;volatile
  1592                           
  1593                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1594   000E78  0E00               	movlw	0
  1595   000E7A  6EBB               	movwf	187,c	;volatile
  1596                           
  1597                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1598   000E7C  0E00               	movlw	0
  1599   000E7E  6EBC               	movwf	188,c	;volatile
  1600                           
  1601                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x00;
  1602   000E80  0E00               	movlw	0
  1603   000E82  6EC2               	movwf	194,c	;volatile
  1604                           
  1605                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF3;
  1606   000E84  0EF3               	movlw	243
  1607   000E86  6EC3               	movwf	195,c	;volatile
  1608                           
  1609                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
  1610   000E88  0E00               	movlw	0
  1611   000E8A  6EC4               	movwf	196,c	;volatile
  1612                           
  1613                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  1614   000E8C  0E00               	movlw	0
  1615   000E8E  013A               	movlb	58	; () banked
  1616   000E90  6F60               	movwf	96,b	;volatile
  1617                           
  1618                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1619   000E92  0E00               	movlw	0
  1620   000E94  6F50               	movwf	80,b	;volatile
  1621                           
  1622                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  1623   000E96  0E00               	movlw	0
  1624   000E98  6F40               	movwf	64,b	;volatile
  1625                           
  1626                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  1627   000E9A  0E00               	movlw	0
  1628   000E9C  6F81               	movwf	129,b	;volatile
  1629                           
  1630                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0xF0;
  1631   000E9E  0EF0               	movlw	240
  1632   000EA0  6F51               	movwf	81,b	;volatile
  1633                           
  1634                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  1635   000EA2  0E00               	movlw	0
  1636   000EA4  6F41               	movwf	65,b	;volatile
  1637                           
  1638                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  1639   000EA6  0E00               	movlw	0
  1640   000EA8  6F61               	movwf	97,b	;volatile
  1641                           
  1642                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
  1643   000EAA  0E00               	movlw	0
  1644   000EAC  6F5A               	movwf	90,b	;volatile
  1645                           
  1646                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
  1647   000EAE  0E00               	movlw	0
  1648   000EB0  6F5B               	movwf	91,b	;volatile
  1649                           
  1650                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
  1651   000EB2  0E00               	movlw	0
  1652   000EB4  6F6A               	movwf	106,b	;volatile
  1653                           
  1654                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
  1655   000EB6  0E00               	movlw	0
  1656   000EB8  6F6B               	movwf	107,b	;volatile
  1657                           
  1658                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1659   000EBA  0E00               	movlw	0
  1660   000EBC  6F42               	movwf	66,b	;volatile
  1661                           
  1662                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1663   000EBE  0E00               	movlw	0
  1664   000EC0  6F52               	movwf	82,b	;volatile
  1665                           
  1666                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1667   000EC2  0E00               	movlw	0
  1668   000EC4  6F62               	movwf	98,b	;volatile
  1669   000EC6                     
  1670                           ; BSR set to: 58
  1671                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
  1672   000EC6  6943               	setf	67,b	;volatile
  1673   000EC8                     
  1674                           ; BSR set to: 58
  1675                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
  1676   000EC8  6953               	setf	83,b	;volatile
  1677   000ECA                     
  1678                           ; BSR set to: 58
  1679                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
  1680   000ECA  6963               	setf	99,b	;volatile
  1681   000ECC                     
  1682                           ; BSR set to: 58
  1683                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
  1684   000ECC  6944               	setf	68,b	;volatile
  1685   000ECE                     
  1686                           ; BSR set to: 58
  1687                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
  1688   000ECE  6954               	setf	84,b	;volatile
  1689   000ED0                     
  1690                           ; BSR set to: 58
  1691                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
  1692   000ED0  6964               	setf	100,b	;volatile
  1693                           
  1694                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
  1695   000ED2  0E08               	movlw	8
  1696   000ED4  6F84               	movwf	132,b	;volatile
  1697                           
  1698                           ;mcc_generated_files/pin_manager.c: 123:     INT1PPS = 0x09;
  1699   000ED6  0E09               	movlw	9
  1700   000ED8  6FC1               	movwf	193,b	;volatile
  1701   000EDA                     
  1702                           ; BSR set to: 58
  1703   000EDA  0012               	return		;funcret
  1704   000EDC                     __end_of_PIN_MANAGER_Initialize:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _OSCILLATOR_Initialize *****************
  1708 ;; Defined at:
  1709 ;;		line 62 in file "mcc_generated_files/mcc.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1726 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 7
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_SYSTEM_Initialize
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text14
  1738   001156                     __ptext14:
  1739                           	callstack 0
  1740   001156                     _OSCILLATOR_Initialize:
  1741                           	callstack 22
  1742   001156                     
  1743                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  1744   001156  0E60               	movlw	96
  1745   001158  0139               	movlb	57	; () banked
  1746   00115A  6FD9               	movwf	217,b	;volatile
  1747                           
  1748                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  1749   00115C  0E00               	movlw	0
  1750   00115E  6FDB               	movwf	219,b	;volatile
  1751                           
  1752                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  1753   001160  0E00               	movlw	0
  1754   001162  6FDD               	movwf	221,b	;volatile
  1755                           
  1756                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
  1757   001164  0E08               	movlw	8
  1758   001166  6FDF               	movwf	223,b	;volatile
  1759                           
  1760                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  1761   001168  0E00               	movlw	0
  1762   00116A  6FDE               	movwf	222,b	;volatile
  1763   00116C                     
  1764                           ; BSR set to: 57
  1765   00116C  0012               	return		;funcret
  1766   00116E                     __end_of_OSCILLATOR_Initialize:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _INTERRUPT_Initialize *****************
  1770 ;; Defined at:
  1771 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		None
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 7
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_SYSTEM_Initialize
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text15
  1800   00116E                     __ptext15:
  1801                           	callstack 0
  1802   00116E                     _INTERRUPT_Initialize:
  1803                           	callstack 22
  1804   00116E                     
  1805                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 1;
  1806   00116E  8AD2               	bsf	210,5,c	;volatile
  1807                           
  1808                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR5bits.INT1IP = 1;
  1809   001170  0139               	movlb	57	; () banked
  1810   001172  8185               	bsf	133,0,b	;volatile
  1811                           
  1812                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR7bits.TMR4IP = 1;
  1813   001174  8187               	bsf	135,0,b	;volatile
  1814                           
  1815                           ;mcc_generated_files/interrupt_manager.c: 67:     IPR3bits.TMR0IP = 0;
  1816   001176  9F83               	bcf	131,7,b	;volatile
  1817                           
  1818                           ;mcc_generated_files/interrupt_manager.c: 70:     IPR4bits.TMR2IP = 0;
  1819   001178  9584               	bcf	132,2,b	;volatile
  1820   00117A                     
  1821                           ; BSR set to: 57
  1822   00117A  0012               	return		;funcret
  1823   00117C                     __end_of_INTERRUPT_Initialize:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _EXT_INT_Initialize *****************
  1827 ;; Defined at:
  1828 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 8
  1849 ;; This function calls:
  1850 ;;		_INT1_SetInterruptHandler
  1851 ;; This function is called by:
  1852 ;;		_SYSTEM_Initialize
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text16
  1857   00113C                     __ptext16:
  1858                           	callstack 0
  1859   00113C                     _EXT_INT_Initialize:
  1860                           	callstack 21
  1861   00113C                     
  1862                           ;mcc_generated_files/ext_int.c: 64:     (PIR5bits.INT1IF = 0);
  1863   00113C  0139               	movlb	57	; () banked
  1864   00113E  91A5               	bcf	165,0,b	;volatile
  1865                           
  1866                           ;mcc_generated_files/ext_int.c: 65:     (INTCON0bits.INT1EDG = 1);
  1867   001140  82D2               	bsf	210,1,c	;volatile
  1868   001142                     
  1869                           ; BSR set to: 57
  1870                           ;mcc_generated_files/ext_int.c: 67:     INT1_SetInterruptHandler(INT1_DefaultInterruptHa
      +                          ndler);
  1871   001142  0EC8               	movlw	low _INT1_DefaultInterruptHandler
  1872   001144  0100               	movlb	0	; () banked
  1873   001146  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  1874   001148  0E11               	movlw	high _INT1_DefaultInterruptHandler
  1875   00114A  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1876   00114C  ECD3  F008         	call	_INT1_SetInterruptHandler	;wreg free
  1877   001150                     
  1878                           ;mcc_generated_files/ext_int.c: 68:     (PIE5bits.INT1IE = 1);
  1879   001150  0139               	movlb	57	; () banked
  1880   001152  8195               	bsf	149,0,b	;volatile
  1881   001154                     
  1882                           ; BSR set to: 57
  1883   001154  0012               	return		;funcret
  1884   001156                     __end_of_EXT_INT_Initialize:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _INT1_SetInterruptHandler *****************
  1888 ;; Defined at:
  1889 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1892 ;;		 -> my_Int1_Isr(1), INT1_DefaultInterruptHandler(1), 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1904 ;;      Params:         0       2       0       0       0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1907 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 7
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_EXT_INT_Initialize
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text17
  1920   0011A6                     __ptext17:
  1921                           	callstack 0
  1922   0011A6                     _INT1_SetInterruptHandler:
  1923                           	callstack 21
  1924   0011A6                     
  1925                           ;mcc_generated_files/ext_int.c: 51:     INT1_InterruptHandler = InterruptHandler;
  1926   0011A6  C060  F04F         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1927   0011AA  C061  F050         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1928   0011AE  0012               	return		;funcret
  1929   0011B0                     __end_of_INT1_SetInterruptHandler:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  1933 ;; Defined at:
  1934 ;;		line 91 in file "mcc_generated_files/interrupt_manager.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1948 ;;      Params:         0       0       0       0       0       0       0       0       0
  1949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1950 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1951 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1952 ;;Total ram usage:        3 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 6
  1955 ;; This function calls:
  1956 ;;		_TMR0_ISR
  1957 ;;		_TMR2_ISR
  1958 ;; This function is called by:
  1959 ;;		Interrupt level 1
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text18
  1964   000E08                     __ptext18:
  1965                           	callstack 0
  1966   000E08                     _INTERRUPT_InterruptManagerLow:
  1967                           	callstack 21
  1968                           
  1969                           ;incstack = 0
  1970   000E08  006F FF60  F048    	movff	status,??_INTERRUPT_InterruptManagerLow
  1971   000E0E  006F FFE8  F049    	movff	pclath,??_INTERRUPT_InterruptManagerLow+1
  1972   000E14  006F FFEC  F04A    	movff	pclatu,??_INTERRUPT_InterruptManagerLow+2
  1973   000E1A                     
  1974                           ;mcc_generated_files/interrupt_manager.c: 94:     if(PIE3bits.TMR0IE == 1 && PIR3bits.TM
      +                          R0IF == 1)
  1975   000E1A  0139               	movlb	57	; () banked
  1976   000E1C  AF93               	btfss	147,7,b	;volatile
  1977   000E1E  EF13  F007         	goto	i1u38_21
  1978   000E22  EF15  F007         	goto	i1u38_20
  1979   000E26                     i1u38_21:
  1980   000E26  EF20  F007         	goto	i1l212
  1981   000E2A                     i1u38_20:
  1982   000E2A                     
  1983                           ; BSR set to: 57
  1984   000E2A  AFA3               	btfss	163,7,b	;volatile
  1985   000E2C  EF1A  F007         	goto	i1u39_21
  1986   000E30  EF1C  F007         	goto	i1u39_20
  1987   000E34                     i1u39_21:
  1988   000E34  EF20  F007         	goto	i1l212
  1989   000E38                     i1u39_20:
  1990   000E38                     
  1991                           ; BSR set to: 57
  1992                           ;mcc_generated_files/interrupt_manager.c: 95:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 96:         TMR0_ISR();
  1993   000E38  ECCD  F007         	call	_TMR0_ISR	;wreg free
  1994                           
  1995                           ;mcc_generated_files/interrupt_manager.c: 97:     }
  1996   000E3C  EF30  F007         	goto	i1l216
  1997   000E40                     i1l212:
  1998                           
  1999                           ; BSR set to: 57
  2000   000E40  A594               	btfss	148,2,b	;volatile
  2001   000E42  EF25  F007         	goto	i1u40_21
  2002   000E46  EF27  F007         	goto	i1u40_20
  2003   000E4A                     i1u40_21:
  2004   000E4A  EF30  F007         	goto	i1l216
  2005   000E4E                     i1u40_20:
  2006   000E4E                     
  2007                           ; BSR set to: 57
  2008   000E4E  A5A4               	btfss	164,2,b	;volatile
  2009   000E50  EF2C  F007         	goto	i1u41_21
  2010   000E54  EF2E  F007         	goto	i1u41_20
  2011   000E58                     i1u41_21:
  2012   000E58  EF30  F007         	goto	i1l216
  2013   000E5C                     i1u41_20:
  2014   000E5C                     
  2015                           ; BSR set to: 57
  2016                           ;mcc_generated_files/interrupt_manager.c: 99:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 100:         TMR2_ISR();
  2017   000E5C  ECB4  F007         	call	_TMR2_ISR	;wreg free
  2018   000E60                     i1l216:
  2019   000E60  0060  F12B  FFFB   	movff	??_INTERRUPT_InterruptManagerLow+2,pclatu
  2020   000E66  0060  F127  FFFA   	movff	??_INTERRUPT_InterruptManagerLow+1,pclath
  2021   000E6C  0060  F123  FFD8   	movff	??_INTERRUPT_InterruptManagerLow,status
  2022   000E72  0011               	retfie		f
  2023   000E74                     __end_of_INTERRUPT_InterruptManagerLow:
  2024                           	callstack 0
  2025                           
  2026 ;; *************** function _TMR2_ISR *****************
  2027 ;; Defined at:
  2028 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 5
  2049 ;; This function calls:
  2050 ;;		NULL
  2051 ;;		_TMR2_DefaultInterruptHandler
  2052 ;;		_my_pwm_isr
  2053 ;; This function is called by:
  2054 ;;		_INTERRUPT_InterruptManagerLow
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text19
  2059   000F68                     __ptext19:
  2060                           	callstack 0
  2061   000F68                     _TMR2_ISR:
  2062                           	callstack 21
  2063   000F68                     
  2064                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
  2065   000F68  0139               	movlb	57	; () banked
  2066   000F6A  95A4               	bcf	164,2,b	;volatile
  2067   000F6C                     
  2068                           ; BSR set to: 57
  2069                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
  2070   000F6C  504D               	movf	_TMR2_InterruptHandler^0,w,c
  2071   000F6E  104E               	iorwf	(_TMR2_InterruptHandler+1)^0,w,c
  2072   000F70  B4D8               	btfsc	status,2,c
  2073   000F72  EFBD  F007         	goto	i1u31_21
  2074   000F76  EFBF  F007         	goto	i1u31_20
  2075   000F7A                     i1u31_21:
  2076   000F7A  EFCC  F007         	goto	i1l317
  2077   000F7E                     i1u31_20:
  2078   000F7E                     
  2079                           ; BSR set to: 57
  2080                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
  2081   000F7E  D802               	call	i1u32_28
  2082   000F80  EFCC  F007         	goto	i1u32_29
  2083   000F84                     i1u32_28:
  2084   000F84  0005               	push	
  2085   000F86  6EFA               	movwf	pclath,c
  2086   000F88  504D               	movf	_TMR2_InterruptHandler^0,w,c
  2087   000F8A  6EFD               	movwf	tosl,c
  2088   000F8C  504E               	movf	(_TMR2_InterruptHandler+1)^0,w,c
  2089   000F8E  6EFE               	movwf	tosh,c
  2090   000F90  50F8               	movf	tblptru,w,c
  2091   000F92  6EFF               	movwf	tosu,c
  2092   000F94  50FA               	movf	pclath,w,c
  2093   000F96  0012               	return		;indir
  2094   000F98                     i1u32_29:
  2095   000F98                     i1l317:
  2096   000F98  0012               	return		;funcret
  2097   000F9A                     __end_of_TMR2_ISR:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  2101 ;; Defined at:
  2102 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		None
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0
  2117 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2119 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2120 ;;Total ram usage:        0 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 4
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_TMR2_Initialize
  2127 ;;		_TMR2_ISR
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text20
  2132   0011C2                     __ptext20:
  2133                           	callstack 0
  2134   0011C2                     _TMR2_DefaultInterruptHandler:
  2135                           	callstack 21
  2136   0011C2  0012               	return		;funcret
  2137   0011C4                     __end_of_TMR2_DefaultInterruptHandler:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function _my_pwm_isr *****************
  2141 ;; Defined at:
  2142 ;;		line 114 in file "main.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  tmp2            1   13[COMRAM] unsigned char 
  2147 ;;  tmp1            1   12[COMRAM] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0
  2158 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2159 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2160 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2161 ;;Total ram usage:        4 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 4
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;;		_TMR2_ISR
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text21
  2173   000A90                     __ptext21:
  2174                           	callstack 0
  2175   000A90                     _my_pwm_isr:
  2176                           	callstack 21
  2177   000A90                     
  2178                           ;main.c: 116:     static uint8_t pwm_cnt=0;;main.c: 117:     uint8_t tmp1 = 0;
  2179   000A90  0E00               	movlw	0
  2180   000A92  6E46               	movwf	my_pwm_isr@tmp1^0,c
  2181                           
  2182                           ;main.c: 118:     uint8_t tmp2 = 0;
  2183   000A94  0E00               	movlw	0
  2184   000A96  6E47               	movwf	my_pwm_isr@tmp2^0,c
  2185   000A98                     
  2186                           ;main.c: 122:     if (pwm_setting[0] > pwm_cnt) tmp1 |= (1<<0);
  2187   000A98  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2188   000A9A  6E44               	movwf	??_my_pwm_isr^0,c
  2189   000A9C  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2190   000A9E  5001               	movf	_pwm_setting^0,w,c	;volatile
  2191   000AA0  5C44               	subwf	??_my_pwm_isr^0,w,c
  2192   000AA2  5002               	movf	(_pwm_setting+1)^0,w,c	;volatile
  2193   000AA4  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2194   000AA6  B0D8               	btfsc	status,0,c
  2195   000AA8  EF58  F005         	goto	i1u10_21
  2196   000AAC  EF5A  F005         	goto	i1u10_20
  2197   000AB0                     i1u10_21:
  2198   000AB0  EF5B  F005         	goto	i1l1329
  2199   000AB4                     i1u10_20:
  2200   000AB4  8046               	bsf	my_pwm_isr@tmp1^0,0,c
  2201   000AB6                     i1l1329:
  2202                           
  2203                           ;main.c: 123:     if (pwm_setting[1] > pwm_cnt) tmp1 |= (1<<1);
  2204   000AB6  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2205   000AB8  6E44               	movwf	??_my_pwm_isr^0,c
  2206   000ABA  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2207   000ABC  5003               	movf	(_pwm_setting+2)^0,w,c	;volatile
  2208   000ABE  5C44               	subwf	??_my_pwm_isr^0,w,c
  2209   000AC0  5004               	movf	(_pwm_setting+3)^0,w,c	;volatile
  2210   000AC2  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2211   000AC4  B0D8               	btfsc	status,0,c
  2212   000AC6  EF67  F005         	goto	i1u11_21
  2213   000ACA  EF69  F005         	goto	i1u11_20
  2214   000ACE                     i1u11_21:
  2215   000ACE  EF6A  F005         	goto	i1l1333
  2216   000AD2                     i1u11_20:
  2217   000AD2  8246               	bsf	my_pwm_isr@tmp1^0,1,c
  2218   000AD4                     i1l1333:
  2219                           
  2220                           ;main.c: 124:     if (pwm_setting[2] > pwm_cnt) tmp1 |= (1<<2);
  2221   000AD4  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2222   000AD6  6E44               	movwf	??_my_pwm_isr^0,c
  2223   000AD8  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2224   000ADA  5005               	movf	(_pwm_setting+4)^0,w,c	;volatile
  2225   000ADC  5C44               	subwf	??_my_pwm_isr^0,w,c
  2226   000ADE  5006               	movf	(_pwm_setting+5)^0,w,c	;volatile
  2227   000AE0  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2228   000AE2  B0D8               	btfsc	status,0,c
  2229   000AE4  EF76  F005         	goto	i1u12_21
  2230   000AE8  EF78  F005         	goto	i1u12_20
  2231   000AEC                     i1u12_21:
  2232   000AEC  EF79  F005         	goto	i1l1337
  2233   000AF0                     i1u12_20:
  2234   000AF0  8446               	bsf	my_pwm_isr@tmp1^0,2,c
  2235   000AF2                     i1l1337:
  2236                           
  2237                           ;main.c: 125:     if (pwm_setting[3] > pwm_cnt) tmp1 |= (1<<3);
  2238   000AF2  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2239   000AF4  6E44               	movwf	??_my_pwm_isr^0,c
  2240   000AF6  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2241   000AF8  5007               	movf	(_pwm_setting+6)^0,w,c	;volatile
  2242   000AFA  5C44               	subwf	??_my_pwm_isr^0,w,c
  2243   000AFC  5008               	movf	(_pwm_setting+7)^0,w,c	;volatile
  2244   000AFE  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2245   000B00  B0D8               	btfsc	status,0,c
  2246   000B02  EF85  F005         	goto	i1u13_21
  2247   000B06  EF87  F005         	goto	i1u13_20
  2248   000B0A                     i1u13_21:
  2249   000B0A  EF88  F005         	goto	i1l1341
  2250   000B0E                     i1u13_20:
  2251   000B0E  8646               	bsf	my_pwm_isr@tmp1^0,3,c
  2252   000B10                     i1l1341:
  2253                           
  2254                           ;main.c: 126:     if (pwm_setting[4] > pwm_cnt) tmp1 |= (1<<4);
  2255   000B10  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2256   000B12  6E44               	movwf	??_my_pwm_isr^0,c
  2257   000B14  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2258   000B16  5009               	movf	(_pwm_setting+8)^0,w,c	;volatile
  2259   000B18  5C44               	subwf	??_my_pwm_isr^0,w,c
  2260   000B1A  500A               	movf	(_pwm_setting+9)^0,w,c	;volatile
  2261   000B1C  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2262   000B1E  B0D8               	btfsc	status,0,c
  2263   000B20  EF94  F005         	goto	i1u14_21
  2264   000B24  EF96  F005         	goto	i1u14_20
  2265   000B28                     i1u14_21:
  2266   000B28  EF97  F005         	goto	i1l1345
  2267   000B2C                     i1u14_20:
  2268   000B2C  8846               	bsf	my_pwm_isr@tmp1^0,4,c
  2269   000B2E                     i1l1345:
  2270                           
  2271                           ;main.c: 127:     if (pwm_setting[5] > pwm_cnt) tmp1 |= (1<<5);
  2272   000B2E  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2273   000B30  6E44               	movwf	??_my_pwm_isr^0,c
  2274   000B32  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2275   000B34  500B               	movf	(_pwm_setting+10)^0,w,c	;volatile
  2276   000B36  5C44               	subwf	??_my_pwm_isr^0,w,c
  2277   000B38  500C               	movf	(_pwm_setting+11)^0,w,c	;volatile
  2278   000B3A  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2279   000B3C  B0D8               	btfsc	status,0,c
  2280   000B3E  EFA3  F005         	goto	i1u15_21
  2281   000B42  EFA5  F005         	goto	i1u15_20
  2282   000B46                     i1u15_21:
  2283   000B46  EFA6  F005         	goto	i1l1349
  2284   000B4A                     i1u15_20:
  2285   000B4A  8A46               	bsf	my_pwm_isr@tmp1^0,5,c
  2286   000B4C                     i1l1349:
  2287                           
  2288                           ;main.c: 128:     if (pwm_setting[6] > pwm_cnt) tmp1 |= (1<<6);
  2289   000B4C  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2290   000B4E  6E44               	movwf	??_my_pwm_isr^0,c
  2291   000B50  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2292   000B52  500D               	movf	(_pwm_setting+12)^0,w,c	;volatile
  2293   000B54  5C44               	subwf	??_my_pwm_isr^0,w,c
  2294   000B56  500E               	movf	(_pwm_setting+13)^0,w,c	;volatile
  2295   000B58  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2296   000B5A  B0D8               	btfsc	status,0,c
  2297   000B5C  EFB2  F005         	goto	i1u16_21
  2298   000B60  EFB4  F005         	goto	i1u16_20
  2299   000B64                     i1u16_21:
  2300   000B64  EFB5  F005         	goto	i1l1353
  2301   000B68                     i1u16_20:
  2302   000B68  8C46               	bsf	my_pwm_isr@tmp1^0,6,c
  2303   000B6A                     i1l1353:
  2304                           
  2305                           ;main.c: 129:     if (pwm_setting[7] > pwm_cnt) tmp1 |= (1<<7);
  2306   000B6A  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2307   000B6C  6E44               	movwf	??_my_pwm_isr^0,c
  2308   000B6E  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2309   000B70  500F               	movf	(_pwm_setting+14)^0,w,c	;volatile
  2310   000B72  5C44               	subwf	??_my_pwm_isr^0,w,c
  2311   000B74  5010               	movf	(_pwm_setting+15)^0,w,c	;volatile
  2312   000B76  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2313   000B78  B0D8               	btfsc	status,0,c
  2314   000B7A  EFC1  F005         	goto	i1u17_21
  2315   000B7E  EFC3  F005         	goto	i1u17_20
  2316   000B82                     i1u17_21:
  2317   000B82  EFC4  F005         	goto	i1l1357
  2318   000B86                     i1u17_20:
  2319   000B86  8E46               	bsf	my_pwm_isr@tmp1^0,7,c
  2320   000B88                     i1l1357:
  2321                           
  2322                           ;main.c: 131:     if (pwm_setting[8] > pwm_cnt) tmp2 |= (1<<0);
  2323   000B88  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2324   000B8A  6E44               	movwf	??_my_pwm_isr^0,c
  2325   000B8C  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2326   000B8E  5011               	movf	(_pwm_setting+16)^0,w,c	;volatile
  2327   000B90  5C44               	subwf	??_my_pwm_isr^0,w,c
  2328   000B92  5012               	movf	(_pwm_setting+17)^0,w,c	;volatile
  2329   000B94  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2330   000B96  B0D8               	btfsc	status,0,c
  2331   000B98  EFD0  F005         	goto	i1u18_21
  2332   000B9C  EFD2  F005         	goto	i1u18_20
  2333   000BA0                     i1u18_21:
  2334   000BA0  EFD3  F005         	goto	i1l1361
  2335   000BA4                     i1u18_20:
  2336   000BA4  8047               	bsf	my_pwm_isr@tmp2^0,0,c
  2337   000BA6                     i1l1361:
  2338                           
  2339                           ;main.c: 132:     if (pwm_setting[9] > pwm_cnt) tmp2 |= (1<<1);
  2340   000BA6  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2341   000BA8  6E44               	movwf	??_my_pwm_isr^0,c
  2342   000BAA  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2343   000BAC  5013               	movf	(_pwm_setting+18)^0,w,c	;volatile
  2344   000BAE  5C44               	subwf	??_my_pwm_isr^0,w,c
  2345   000BB0  5014               	movf	(_pwm_setting+19)^0,w,c	;volatile
  2346   000BB2  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2347   000BB4  B0D8               	btfsc	status,0,c
  2348   000BB6  EFDF  F005         	goto	i1u19_21
  2349   000BBA  EFE1  F005         	goto	i1u19_20
  2350   000BBE                     i1u19_21:
  2351   000BBE  EFE2  F005         	goto	i1l1365
  2352   000BC2                     i1u19_20:
  2353   000BC2  8247               	bsf	my_pwm_isr@tmp2^0,1,c
  2354   000BC4                     i1l1365:
  2355                           
  2356                           ;main.c: 133:     if (pwm_setting[10] > pwm_cnt) tmp2 |= (1<<2);
  2357   000BC4  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2358   000BC6  6E44               	movwf	??_my_pwm_isr^0,c
  2359   000BC8  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2360   000BCA  5015               	movf	(_pwm_setting+20)^0,w,c	;volatile
  2361   000BCC  5C44               	subwf	??_my_pwm_isr^0,w,c
  2362   000BCE  5016               	movf	(_pwm_setting+21)^0,w,c	;volatile
  2363   000BD0  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2364   000BD2  B0D8               	btfsc	status,0,c
  2365   000BD4  EFEE  F005         	goto	i1u20_21
  2366   000BD8  EFF0  F005         	goto	i1u20_20
  2367   000BDC                     i1u20_21:
  2368   000BDC  EFF1  F005         	goto	i1l1369
  2369   000BE0                     i1u20_20:
  2370   000BE0  8447               	bsf	my_pwm_isr@tmp2^0,2,c
  2371   000BE2                     i1l1369:
  2372                           
  2373                           ;main.c: 134:     if (pwm_setting[11] > pwm_cnt) tmp2 |= (1<<3);
  2374   000BE2  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2375   000BE4  6E44               	movwf	??_my_pwm_isr^0,c
  2376   000BE6  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2377   000BE8  5017               	movf	(_pwm_setting+22)^0,w,c	;volatile
  2378   000BEA  5C44               	subwf	??_my_pwm_isr^0,w,c
  2379   000BEC  5018               	movf	(_pwm_setting+23)^0,w,c	;volatile
  2380   000BEE  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2381   000BF0  B0D8               	btfsc	status,0,c
  2382   000BF2  EFFD  F005         	goto	i1u21_21
  2383   000BF6  EFFF  F005         	goto	i1u21_20
  2384   000BFA                     i1u21_21:
  2385   000BFA  EF00  F006         	goto	i1l1373
  2386   000BFE                     i1u21_20:
  2387   000BFE  8647               	bsf	my_pwm_isr@tmp2^0,3,c
  2388   000C00                     i1l1373:
  2389                           
  2390                           ;main.c: 135:     if (pwm_setting[12] > pwm_cnt) tmp2 |= (1<<4);
  2391   000C00  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2392   000C02  6E44               	movwf	??_my_pwm_isr^0,c
  2393   000C04  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2394   000C06  5019               	movf	(_pwm_setting+24)^0,w,c	;volatile
  2395   000C08  5C44               	subwf	??_my_pwm_isr^0,w,c
  2396   000C0A  501A               	movf	(_pwm_setting+25)^0,w,c	;volatile
  2397   000C0C  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2398   000C0E  B0D8               	btfsc	status,0,c
  2399   000C10  EF0C  F006         	goto	i1u22_21
  2400   000C14  EF0E  F006         	goto	i1u22_20
  2401   000C18                     i1u22_21:
  2402   000C18  EF0F  F006         	goto	i1l1377
  2403   000C1C                     i1u22_20:
  2404   000C1C  8847               	bsf	my_pwm_isr@tmp2^0,4,c
  2405   000C1E                     i1l1377:
  2406                           
  2407                           ;main.c: 136:     if (pwm_setting[13] > pwm_cnt) tmp2 |= (1<<5);
  2408   000C1E  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2409   000C20  6E44               	movwf	??_my_pwm_isr^0,c
  2410   000C22  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2411   000C24  501B               	movf	(_pwm_setting+26)^0,w,c	;volatile
  2412   000C26  5C44               	subwf	??_my_pwm_isr^0,w,c
  2413   000C28  501C               	movf	(_pwm_setting+27)^0,w,c	;volatile
  2414   000C2A  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2415   000C2C  B0D8               	btfsc	status,0,c
  2416   000C2E  EF1B  F006         	goto	i1u23_21
  2417   000C32  EF1D  F006         	goto	i1u23_20
  2418   000C36                     i1u23_21:
  2419   000C36  EF1E  F006         	goto	i1l1381
  2420   000C3A                     i1u23_20:
  2421   000C3A  8A47               	bsf	my_pwm_isr@tmp2^0,5,c
  2422   000C3C                     i1l1381:
  2423                           
  2424                           ;main.c: 137:     if (pwm_setting[14] > pwm_cnt) tmp2 |= (1<<6);
  2425   000C3C  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2426   000C3E  6E44               	movwf	??_my_pwm_isr^0,c
  2427   000C40  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2428   000C42  501D               	movf	(_pwm_setting+28)^0,w,c	;volatile
  2429   000C44  5C44               	subwf	??_my_pwm_isr^0,w,c
  2430   000C46  501E               	movf	(_pwm_setting+29)^0,w,c	;volatile
  2431   000C48  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2432   000C4A  B0D8               	btfsc	status,0,c
  2433   000C4C  EF2A  F006         	goto	i1u24_21
  2434   000C50  EF2C  F006         	goto	i1u24_20
  2435   000C54                     i1u24_21:
  2436   000C54  EF2D  F006         	goto	i1l1385
  2437   000C58                     i1u24_20:
  2438   000C58  8C47               	bsf	my_pwm_isr@tmp2^0,6,c
  2439   000C5A                     i1l1385:
  2440                           
  2441                           ;main.c: 138:     if (pwm_setting[15] > pwm_cnt) tmp2 |= (1<<7);
  2442   000C5A  5039               	movf	my_pwm_isr@pwm_cnt^0,w,c
  2443   000C5C  6E44               	movwf	??_my_pwm_isr^0,c
  2444   000C5E  6A45               	clrf	(??_my_pwm_isr+1)^0,c
  2445   000C60  501F               	movf	(_pwm_setting+30)^0,w,c	;volatile
  2446   000C62  5C44               	subwf	??_my_pwm_isr^0,w,c
  2447   000C64  5020               	movf	(_pwm_setting+31)^0,w,c	;volatile
  2448   000C66  5845               	subwfb	(??_my_pwm_isr+1)^0,w,c
  2449   000C68  B0D8               	btfsc	status,0,c
  2450   000C6A  EF39  F006         	goto	i1u25_21
  2451   000C6E  EF3B  F006         	goto	i1u25_20
  2452   000C72                     i1u25_21:
  2453   000C72  EF3C  F006         	goto	i1l1389
  2454   000C76                     i1u25_20:
  2455   000C76  8E47               	bsf	my_pwm_isr@tmp2^0,7,c
  2456   000C78                     i1l1389:
  2457                           
  2458                           ;main.c: 140:     LATA = tmp1;
  2459   000C78  0060  F11B  FFBA   	movff	my_pwm_isr@tmp1,16314	;volatile
  2460   000C7E                     
  2461                           ;main.c: 141:     LATC = tmp2;
  2462   000C7E  0060  F11F  FFBC   	movff	my_pwm_isr@tmp2,16316	;volatile
  2463   000C84                     
  2464                           ;main.c: 143:     if (pwm_cnt==254)
  2465   000C84  0EFE               	movlw	254
  2466   000C86  1839               	xorwf	my_pwm_isr@pwm_cnt^0,w,c
  2467   000C88  A4D8               	btfss	status,2,c
  2468   000C8A  EF49  F006         	goto	i1u26_21
  2469   000C8E  EF4B  F006         	goto	i1u26_20
  2470   000C92                     i1u26_21:
  2471   000C92  EF4F  F006         	goto	i1l1397
  2472   000C96                     i1u26_20:
  2473   000C96                     
  2474                           ;main.c: 144:         pwm_cnt=0;
  2475   000C96  0E00               	movlw	0
  2476   000C98  6E39               	movwf	my_pwm_isr@pwm_cnt^0,c
  2477   000C9A  EF50  F006         	goto	i1l490
  2478   000C9E                     i1l1397:
  2479                           
  2480                           ;main.c: 146:         pwm_cnt++;
  2481   000C9E  2A39               	incf	my_pwm_isr@pwm_cnt^0,f,c
  2482   000CA0                     i1l490:
  2483   000CA0  0012               	return		;funcret
  2484   000CA2                     __end_of_my_pwm_isr:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function _TMR0_ISR *****************
  2488 ;; Defined at:
  2489 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 5
  2510 ;; This function calls:
  2511 ;;		NULL
  2512 ;;		_TMR0_DefaultInterruptHandler
  2513 ;;		_my_antiflicker_isr
  2514 ;; This function is called by:
  2515 ;;		_INTERRUPT_InterruptManagerLow
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text22
  2520   000F9A                     __ptext22:
  2521                           	callstack 0
  2522   000F9A                     _TMR0_ISR:
  2523                           	callstack 21
  2524   000F9A                     
  2525                           ;mcc_generated_files/tmr0.c: 124:     PIR3bits.TMR0IF = 0;
  2526   000F9A  0139               	movlb	57	; () banked
  2527   000F9C  9FA3               	bcf	163,7,b	;volatile
  2528   000F9E                     
  2529                           ; BSR set to: 57
  2530                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  2531   000F9E  5051               	movf	_TMR0_InterruptHandler^0,w,c
  2532   000FA0  1052               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2533   000FA2  B4D8               	btfsc	status,2,c
  2534   000FA4  EFD6  F007         	goto	i1u27_21
  2535   000FA8  EFD8  F007         	goto	i1u27_20
  2536   000FAC                     i1u27_21:
  2537   000FAC  EFE5  F007         	goto	i1l155
  2538   000FB0                     i1u27_20:
  2539   000FB0                     
  2540                           ; BSR set to: 57
  2541                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  2542   000FB0  D802               	call	i1u28_28
  2543   000FB2  EFE5  F007         	goto	i1u28_29
  2544   000FB6                     i1u28_28:
  2545   000FB6  0005               	push	
  2546   000FB8  6EFA               	movwf	pclath,c
  2547   000FBA  5051               	movf	_TMR0_InterruptHandler^0,w,c
  2548   000FBC  6EFD               	movwf	tosl,c
  2549   000FBE  5052               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2550   000FC0  6EFE               	movwf	tosh,c
  2551   000FC2  50F8               	movf	tblptru,w,c
  2552   000FC4  6EFF               	movwf	tosu,c
  2553   000FC6  50FA               	movf	pclath,w,c
  2554   000FC8  0012               	return		;indir
  2555   000FCA                     i1u28_29:
  2556   000FCA                     i1l155:
  2557   000FCA  0012               	return		;funcret
  2558   000FCC                     __end_of_TMR0_ISR:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2562 ;; Defined at:
  2563 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		None
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 4
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_TMR0_Initialize
  2588 ;;		_TMR0_ISR
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text23
  2593   0011C4                     __ptext23:
  2594                           	callstack 0
  2595   0011C4                     _TMR0_DefaultInterruptHandler:
  2596                           	callstack 21
  2597   0011C4  0012               	return		;funcret
  2598   0011C6                     __end_of_TMR0_DefaultInterruptHandler:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function _my_antiflicker_isr *****************
  2602 ;; Defined at:
  2603 ;;		line 68 in file "main.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2617 ;;      Params:         0       0       0       0       0       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2620 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2621 ;;Total ram usage:        0 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 4
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;;		_TMR0_ISR
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text24
  2633   000F2A                     __ptext24:
  2634                           	callstack 0
  2635   000F2A                     _my_antiflicker_isr:
  2636                           	callstack 21
  2637   000F2A                     
  2638                           ;main.c: 71:     if ( clocks_counter == old_clocks_counter ) {
  2639   000F2A  5031               	movf	_old_clocks_counter^0,w,c	;volatile
  2640   000F2C  1833               	xorwf	_clocks_counter^0,w,c	;volatile
  2641   000F2E  E107               	bnz	i1u4_21
  2642   000F30  5032               	movf	(_old_clocks_counter+1)^0,w,c	;volatile
  2643   000F32  1834               	xorwf	(_clocks_counter+1)^0,w,c	;volatile
  2644   000F34  A4D8               	btfss	status,2,c
  2645   000F36  EF9F  F007         	goto	i1u4_21
  2646   000F3A  EFA1  F007         	goto	i1u4_20
  2647   000F3E                     i1u4_21:
  2648   000F3E  EFAF  F007         	goto	i1l456
  2649   000F42                     i1u4_20:
  2650   000F42                     
  2651                           ;main.c: 73:         lampstatus = lampdata;
  2652   000F42  C037  F035         	movff	_lampdata,_lampstatus	;volatile
  2653   000F46  C038  F036         	movff	_lampdata+1,_lampstatus+1	;volatile
  2654   000F4A                     
  2655                           ;main.c: 75:         clocks_counter = old_clocks_counter = 0;
  2656   000F4A  0E00               	movlw	0
  2657   000F4C  6E32               	movwf	(_old_clocks_counter+1)^0,c	;volatile
  2658   000F4E  0E00               	movlw	0
  2659   000F50  6E31               	movwf	_old_clocks_counter^0,c	;volatile
  2660   000F52  C031  F033         	movff	_old_clocks_counter,_clocks_counter	;volatile
  2661   000F56  C032  F034         	movff	_old_clocks_counter+1,_clocks_counter+1	;volatile
  2662                           
  2663                           ;main.c: 76:     }
  2664   000F5A  EFB3  F007         	goto	i1l458
  2665   000F5E                     i1l456:
  2666                           
  2667                           ;main.c: 78:     {;main.c: 79:        old_clocks_counter = clocks_counter;
  2668   000F5E  C033  F031         	movff	_clocks_counter,_old_clocks_counter	;volatile
  2669   000F62  C034  F032         	movff	_clocks_counter+1,_old_clocks_counter+1	;volatile
  2670   000F66                     i1l458:
  2671   000F66  0012               	return		;funcret
  2672   000F68                     __end_of_my_antiflicker_isr:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  2676 ;; Defined at:
  2677 ;;		line 74 in file "mcc_generated_files/interrupt_manager.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2693 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2694 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2695 ;;Total ram usage:        6 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 3
  2698 ;; This function calls:
  2699 ;;		_INT1_ISR
  2700 ;;		_TMR4_ISR
  2701 ;; This function is called by:
  2702 ;;		Interrupt level 2
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text25
  2707   000D78                     __ptext25:
  2708                           	callstack 0
  2709   000D78                     _INTERRUPT_InterruptManagerHigh:
  2710                           	callstack 21
  2711                           
  2712                           ;incstack = 0
  2713   000D78  006F FFE8  F03E    	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  2714   000D7E  006F FFEC  F03F    	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  2715   000D84  006F FFD8  F040    	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+2
  2716   000D8A  006F FFDC  F041    	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+3
  2717   000D90  006F FFE0  F042    	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+4
  2718   000D96  006F FFD4  F043    	movff	tablat,??_INTERRUPT_InterruptManagerHigh+5
  2719   000D9C                     
  2720                           ;mcc_generated_files/interrupt_manager.c: 77:     if(PIE5bits.INT1IE == 1 && PIR5bits.IN
      +                          T1IF == 1)
  2721   000D9C  0139               	movlb	57	; () banked
  2722   000D9E  A195               	btfss	149,0,b	;volatile
  2723   000DA0  EFD4  F006         	goto	i2u34_41
  2724   000DA4  EFD6  F006         	goto	i2u34_40
  2725   000DA8                     i2u34_41:
  2726   000DA8  EFE1  F006         	goto	i2l203
  2727   000DAC                     i2u34_40:
  2728   000DAC                     
  2729                           ; BSR set to: 57
  2730   000DAC  A1A5               	btfss	165,0,b	;volatile
  2731   000DAE  EFDB  F006         	goto	i2u35_41
  2732   000DB2  EFDD  F006         	goto	i2u35_40
  2733   000DB6                     i2u35_41:
  2734   000DB6  EFE1  F006         	goto	i2l203
  2735   000DBA                     i2u35_40:
  2736   000DBA                     
  2737                           ; BSR set to: 57
  2738                           ;mcc_generated_files/interrupt_manager.c: 78:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 79:         INT1_ISR();
  2739   000DBA  ECD8  F008         	call	_INT1_ISR	;wreg free
  2740                           
  2741                           ;mcc_generated_files/interrupt_manager.c: 80:     }
  2742   000DBE  EFF1  F006         	goto	i2l207
  2743   000DC2                     i2l203:
  2744                           
  2745                           ; BSR set to: 57
  2746   000DC2  A197               	btfss	151,0,b	;volatile
  2747   000DC4  EFE6  F006         	goto	i2u36_41
  2748   000DC8  EFE8  F006         	goto	i2u36_40
  2749   000DCC                     i2u36_41:
  2750   000DCC  EFF1  F006         	goto	i2l207
  2751   000DD0                     i2u36_40:
  2752   000DD0                     
  2753                           ; BSR set to: 57
  2754   000DD0  A1A7               	btfss	167,0,b	;volatile
  2755   000DD2  EFED  F006         	goto	i2u37_41
  2756   000DD6  EFEF  F006         	goto	i2u37_40
  2757   000DDA                     i2u37_41:
  2758   000DDA  EFF1  F006         	goto	i2l207
  2759   000DDE                     i2u37_40:
  2760   000DDE                     
  2761                           ; BSR set to: 57
  2762                           ;mcc_generated_files/interrupt_manager.c: 82:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 83:         TMR4_ISR();
  2763   000DDE  ECE6  F007         	call	_TMR4_ISR	;wreg free
  2764   000DE2                     i2l207:
  2765   000DE2  0060  F10F  FFF5   	movff	??_INTERRUPT_InterruptManagerHigh+5,tablat
  2766   000DE8  0060  F10B  FFF8   	movff	??_INTERRUPT_InterruptManagerHigh+4,tblptru
  2767   000DEE  0060  F107  FFF7   	movff	??_INTERRUPT_InterruptManagerHigh+3,tblptrh
  2768   000DF4  0060  F103  FFF6   	movff	??_INTERRUPT_InterruptManagerHigh+2,tblptrl
  2769   000DFA  0060  F0FF  FFFB   	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  2770   000E00  0060  F0FB  FFFA   	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  2771   000E06  0011               	retfie		f
  2772   000E08                     __end_of_INTERRUPT_InterruptManagerHigh:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _TMR4_ISR *****************
  2776 ;; Defined at:
  2777 ;;		line 165 in file "mcc_generated_files/tmr4.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 1
  2798 ;; This function calls:
  2799 ;;		NULL
  2800 ;;		_TMR4_DefaultInterruptHandler
  2801 ;;		_my_fading_isr
  2802 ;; This function is called by:
  2803 ;;		_INTERRUPT_InterruptManagerHigh
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text26
  2808   000FCC                     __ptext26:
  2809                           	callstack 0
  2810   000FCC                     _TMR4_ISR:
  2811                           	callstack 22
  2812   000FCC                     
  2813                           ;mcc_generated_files/tmr4.c: 169:     PIR7bits.TMR4IF = 0;
  2814   000FCC  0139               	movlb	57	; () banked
  2815   000FCE  91A7               	bcf	167,0,b	;volatile
  2816   000FD0                     
  2817                           ; BSR set to: 57
  2818                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
  2819   000FD0  504B               	movf	_TMR4_InterruptHandler^0,w,c
  2820   000FD2  104C               	iorwf	(_TMR4_InterruptHandler+1)^0,w,c
  2821   000FD4  B4D8               	btfsc	status,2,c
  2822   000FD6  EFEF  F007         	goto	i2u29_41
  2823   000FDA  EFF1  F007         	goto	i2u29_40
  2824   000FDE                     i2u29_41:
  2825   000FDE  EFFE  F007         	goto	i2l398
  2826   000FE2                     i2u29_40:
  2827   000FE2                     
  2828                           ; BSR set to: 57
  2829                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
  2830   000FE2  D802               	call	i2u30_48
  2831   000FE4  EFFE  F007         	goto	i2u30_49
  2832   000FE8                     i2u30_48:
  2833   000FE8  0005               	push	
  2834   000FEA  6EFA               	movwf	pclath,c
  2835   000FEC  504B               	movf	_TMR4_InterruptHandler^0,w,c
  2836   000FEE  6EFD               	movwf	tosl,c
  2837   000FF0  504C               	movf	(_TMR4_InterruptHandler+1)^0,w,c
  2838   000FF2  6EFE               	movwf	tosh,c
  2839   000FF4  50F8               	movf	tblptru,w,c
  2840   000FF6  6EFF               	movwf	tosu,c
  2841   000FF8  50FA               	movf	pclath,w,c
  2842   000FFA  0012               	return		;indir
  2843   000FFC                     i2u30_49:
  2844   000FFC                     i2l398:
  2845   000FFC  0012               	return		;funcret
  2846   000FFE                     __end_of_TMR4_ISR:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  2850 ;; Defined at:
  2851 ;;		line 182 in file "mcc_generated_files/tmr4.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;		None
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		None
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0
  2866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2868 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_TMR4_Initialize
  2875 ;;		_TMR4_ISR
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text27
  2880   0011C6                     __ptext27:
  2881                           	callstack 0
  2882   0011C6                     _TMR4_DefaultInterruptHandler:
  2883                           	callstack 22
  2884   0011C6  0012               	return		;funcret
  2885   0011C8                     __end_of_TMR4_DefaultInterruptHandler:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _my_fading_isr *****************
  2889 ;; Defined at:
  2890 ;;		line 88 in file "main.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  io              1    3[COMRAM] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0
  2905 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2906 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2907 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2908 ;;Total ram usage:        4 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;;		_TMR4_ISR
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text28
  2919   000CA2                     __ptext28:
  2920                           	callstack 0
  2921   000CA2                     _my_fading_isr:
  2922                           	callstack 22
  2923   000CA2                     
  2924                           ;main.c: 90:     uint8_t io;;main.c: 95:     for (io=0; io<=15; io++) {
  2925   000CA2  0E00               	movlw	0
  2926   000CA4  6E3D               	movwf	my_fading_isr@io^0,c
  2927   000CA6                     i2l1305:
  2928                           
  2929                           ;main.c: 97:         if ( ((lampstatus) & (1 << (io))) == 0) {
  2930   000CA6  C03D  F03A         	movff	my_fading_isr@io,??_my_fading_isr
  2931   000CAA  0E01               	movlw	1
  2932   000CAC  6E3B               	movwf	(??_my_fading_isr+1)^0,c
  2933   000CAE  0E00               	movlw	0
  2934   000CB0  6E3C               	movwf	(??_my_fading_isr+2)^0,c
  2935   000CB2  2A3A               	incf	??_my_fading_isr^0,f,c
  2936   000CB4  EF5F  F006         	goto	i2u5_44
  2937   000CB8                     i2u5_45:
  2938   000CB8  90D8               	bcf	status,0,c
  2939   000CBA  363B               	rlcf	(??_my_fading_isr+1)^0,f,c
  2940   000CBC  363C               	rlcf	(??_my_fading_isr+2)^0,f,c
  2941   000CBE                     i2u5_44:
  2942   000CBE  2E3A               	decfsz	??_my_fading_isr^0,f,c
  2943   000CC0  EF5C  F006         	goto	i2u5_45
  2944   000CC4  5035               	movf	_lampstatus^0,w,c	;volatile
  2945   000CC6  163B               	andwf	(??_my_fading_isr+1)^0,f,c
  2946   000CC8  5036               	movf	(_lampstatus+1)^0,w,c	;volatile
  2947   000CCA  163C               	andwf	(??_my_fading_isr+2)^0,f,c
  2948   000CCC  503B               	movf	(??_my_fading_isr+1)^0,w,c
  2949   000CCE  103C               	iorwf	(??_my_fading_isr+2)^0,w,c
  2950   000CD0  A4D8               	btfss	status,2,c
  2951   000CD2  EF6D  F006         	goto	i2u6_41
  2952   000CD6  EF6F  F006         	goto	i2u6_40
  2953   000CDA                     i2u6_41:
  2954   000CDA  EF9E  F006         	goto	i2l1313
  2955   000CDE                     i2u6_40:
  2956   000CDE                     
  2957                           ;main.c: 98:             if (pwm_phase[io] != 0) {
  2958   000CDE  503D               	movf	my_fading_isr@io^0,w,c
  2959   000CE0  0F21               	addlw	low _pwm_phase
  2960   000CE2  6ED9               	movwf	fsr2l,c
  2961   000CE4  6ADA               	clrf	fsr2h,c
  2962   000CE6  50DF               	movf	indf2,w,c
  2963   000CE8  B4D8               	btfsc	status,2,c
  2964   000CEA  EF79  F006         	goto	i2u7_41
  2965   000CEE  EF7B  F006         	goto	i2u7_40
  2966   000CF2                     i2u7_41:
  2967   000CF2  EFB2  F006         	goto	i2l1319
  2968   000CF6                     i2u7_40:
  2969   000CF6                     
  2970                           ;main.c: 99:             --pwm_phase[io];
  2971   000CF6  503D               	movf	my_fading_isr@io^0,w,c
  2972   000CF8  0F21               	addlw	low _pwm_phase
  2973   000CFA  6ED9               	movwf	fsr2l,c
  2974   000CFC  6ADA               	clrf	fsr2h,c
  2975   000CFE  06DF               	decf	indf2,f,c
  2976   000D00                     i2l1311:
  2977                           
  2978                           ;main.c: 100:             pwm_setting[io] = pwm_table[pwm_phase[io]];
  2979   000D00  503D               	movf	my_fading_isr@io^0,w,c
  2980   000D02  0F21               	addlw	low _pwm_phase
  2981   000D04  6ED9               	movwf	fsr2l,c
  2982   000D06  6ADA               	clrf	fsr2h,c
  2983   000D08  50DF               	movf	indf2,w,c
  2984   000D0A  0D02               	mullw	2
  2985   000D0C  50F3               	movf	243,w,c
  2986   000D0E  0F01               	addlw	low _pwm_table
  2987   000D10  6E3A               	movwf	??_my_fading_isr^0,c
  2988   000D12  0060  F0EB  FFF6   	movff	??_my_fading_isr,tblptrl
  2989   000D18                     	if	1	;There is more than 1 active tblptr byte
  2990   000D18  0E08               	movlw	high __smallconst
  2991   000D1A  6EF7               	movwf	tblptrh,c
  2992   000D1C                     	endif
  2993   000D1C                     	if	0	;tblptru may be non-zero
  2994   000D1C                     	endif
  2995   000D1C                     	if	0	;tblptru may be non-zero
  2996   000D1C                     	endif
  2997   000D1C  503D               	movf	my_fading_isr@io^0,w,c
  2998   000D1E  0D02               	mullw	2
  2999   000D20  50F3               	movf	243,w,c
  3000   000D22  0F01               	addlw	low _pwm_setting
  3001   000D24  6ED9               	movwf	fsr2l,c
  3002   000D26  6ADA               	clrf	fsr2h,c
  3003   000D28  0009               	tblrd		*+
  3004   000D2A  006F FFD7 FFDE     	movff	tablat,postinc2
  3005   000D30  0008               	tblrd		*
  3006   000D32  006F FFD7 FFDD     	movff	tablat,postdec2
  3007   000D38  EFB2  F006         	goto	i2l1319
  3008   000D3C                     i2l1313:
  3009                           
  3010                           ;main.c: 104:             if (pwm_phase[io] != 31) {
  3011   000D3C  503D               	movf	my_fading_isr@io^0,w,c
  3012   000D3E  0F21               	addlw	low _pwm_phase
  3013   000D40  6ED9               	movwf	fsr2l,c
  3014   000D42  6ADA               	clrf	fsr2h,c
  3015   000D44  0E1F               	movlw	31
  3016   000D46  18DE               	xorwf	postinc2,w,c
  3017   000D48  B4D8               	btfsc	status,2,c
  3018   000D4A  EFA9  F006         	goto	i2u8_41
  3019   000D4E  EFAB  F006         	goto	i2u8_40
  3020   000D52                     i2u8_41:
  3021   000D52  EFB2  F006         	goto	i2l1319
  3022   000D56                     i2u8_40:
  3023   000D56                     
  3024                           ;main.c: 105:             ++pwm_phase[io];
  3025   000D56  503D               	movf	my_fading_isr@io^0,w,c
  3026   000D58  0F21               	addlw	low _pwm_phase
  3027   000D5A  6ED9               	movwf	fsr2l,c
  3028   000D5C  6ADA               	clrf	fsr2h,c
  3029   000D5E  2ADF               	incf	indf2,f,c
  3030   000D60  EF80  F006         	goto	i2l1311
  3031   000D64                     i2l1319:
  3032                           
  3033                           ;main.c: 109:     }
  3034   000D64  2A3D               	incf	my_fading_isr@io^0,f,c
  3035   000D66  0E0F               	movlw	15
  3036   000D68  643D               	cpfsgt	my_fading_isr@io^0,c
  3037   000D6A  EFB9  F006         	goto	i2u9_41
  3038   000D6E  EFBB  F006         	goto	i2u9_40
  3039   000D72                     i2u9_41:
  3040   000D72  EF53  F006         	goto	i2l1305
  3041   000D76                     i2u9_40:
  3042   000D76  0012               	return		;funcret
  3043   000D78                     __end_of_my_fading_isr:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function _INT1_ISR *****************
  3047 ;; Defined at:
  3048 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3062 ;;      Params:         0       0       0       0       0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3065 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 2
  3069 ;; This function calls:
  3070 ;;		_INT1_CallBack
  3071 ;; This function is called by:
  3072 ;;		_INTERRUPT_InterruptManagerHigh
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text29
  3077   0011B0                     __ptext29:
  3078                           	callstack 0
  3079   0011B0                     _INT1_ISR:
  3080                           	callstack 21
  3081   0011B0                     
  3082                           ;mcc_generated_files/ext_int.c: 34:     (PIR5bits.INT1IF = 0);
  3083   0011B0  0139               	movlb	57	; () banked
  3084   0011B2  91A5               	bcf	165,0,b	;volatile
  3085   0011B4                     
  3086                           ; BSR set to: 57
  3087                           ;mcc_generated_files/ext_int.c: 37:     INT1_CallBack();
  3088   0011B4  EC2D  F008         	call	_INT1_CallBack	;wreg free
  3089   0011B8  0012               	return		;funcret
  3090   0011BA                     __end_of_INT1_ISR:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _INT1_CallBack *****************
  3094 ;; Defined at:
  3095 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3109 ;;      Params:         0       0       0       0       0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; Hardware stack levels required when called: 1
  3116 ;; This function calls:
  3117 ;;		NULL
  3118 ;;		_INT1_DefaultInterruptHandler
  3119 ;;		_my_Int1_Isr
  3120 ;; This function is called by:
  3121 ;;		_INT1_ISR
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text30
  3126   00105A                     __ptext30:
  3127                           	callstack 0
  3128   00105A                     _INT1_CallBack:
  3129                           	callstack 21
  3130   00105A                     
  3131                           ;mcc_generated_files/ext_int.c: 44:     if(INT1_InterruptHandler)
  3132   00105A  504F               	movf	_INT1_InterruptHandler^0,w,c
  3133   00105C  1050               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  3134   00105E  B4D8               	btfsc	status,2,c
  3135   001060  EF34  F008         	goto	i2u2_41
  3136   001064  EF36  F008         	goto	i2u2_40
  3137   001068                     i2u2_41:
  3138   001068  EF43  F008         	goto	i2l233
  3139   00106C                     i2u2_40:
  3140   00106C                     
  3141                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          1_InterruptHandler();
  3142   00106C  D802               	call	i2u3_48
  3143   00106E  EF43  F008         	goto	i2u3_49
  3144   001072                     i2u3_48:
  3145   001072  0005               	push	
  3146   001074  6EFA               	movwf	pclath,c
  3147   001076  504F               	movf	_INT1_InterruptHandler^0,w,c
  3148   001078  6EFD               	movwf	tosl,c
  3149   00107A  5050               	movf	(_INT1_InterruptHandler+1)^0,w,c
  3150   00107C  6EFE               	movwf	tosh,c
  3151   00107E  50F8               	movf	tblptru,w,c
  3152   001080  6EFF               	movwf	tosu,c
  3153   001082  50FA               	movf	pclath,w,c
  3154   001084  0012               	return		;indir
  3155   001086                     i2u3_49:
  3156   001086                     i2l233:
  3157   001086  0012               	return		;funcret
  3158   001088                     __end_of_INT1_CallBack:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _INT1_DefaultInterruptHandler *****************
  3162 ;; Defined at:
  3163 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		None
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3177 ;;      Params:         0       0       0       0       0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3180 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_EXT_INT_Initialize
  3187 ;;		_INT1_CallBack
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text31
  3192   0011C8                     __ptext31:
  3193                           	callstack 0
  3194   0011C8                     _INT1_DefaultInterruptHandler:
  3195                           	callstack 21
  3196   0011C8  0012               	return		;funcret
  3197   0011CA                     __end_of_INT1_DefaultInterruptHandler:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _my_Int1_Isr *****************
  3201 ;; Defined at:
  3202 ;;		line 48 in file "main.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3216 ;;      Params:         0       0       0       0       0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3220 ;;Total ram usage:        0 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;;		_INT1_CallBack
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text32
  3231   0010AE                     __ptext32:
  3232                           	callstack 0
  3233   0010AE                     _my_Int1_Isr:
  3234                           	callstack 21
  3235   0010AE                     
  3236                           ;main.c: 51:   lampdata = ( lampdata << 1);
  3237   0010AE  90D8               	bcf	status,0,c
  3238   0010B0  3437               	rlcf	_lampdata^0,w,c	;volatile
  3239   0010B2  6E37               	movwf	_lampdata^0,c	;volatile
  3240   0010B4  3438               	rlcf	(_lampdata+1)^0,w,c	;volatile
  3241   0010B6  6E38               	movwf	(_lampdata+1)^0,c	;volatile
  3242   0010B8                     
  3243                           ;main.c: 54:   if (PORTBbits.RB0 == 0)
  3244   0010B8  B0CB               	btfsc	203,0,c	;volatile
  3245   0010BA  EF61  F008         	goto	i2u1_41
  3246   0010BE  EF63  F008         	goto	i2u1_40
  3247   0010C2                     i2u1_41:
  3248   0010C2  EF66  F008         	goto	i2l1231
  3249   0010C6                     i2u1_40:
  3250   0010C6                     
  3251                           ;main.c: 55:       lampdata &= (~(1 << 0));
  3252   0010C6  9037               	bcf	_lampdata^0,0,c	;volatile
  3253   0010C8  EF67  F008         	goto	i2l452
  3254   0010CC                     i2l1231:
  3255                           
  3256                           ;main.c: 57:       lampdata |= (1 << 0);
  3257   0010CC  8037               	bsf	_lampdata^0,0,c	;volatile
  3258   0010CE                     i2l452:
  3259                           
  3260                           ;main.c: 60:   clocks_counter++;
  3261   0010CE  4A33               	infsnz	_clocks_counter^0,f,c	;volatile
  3262   0010D0  2A34               	incf	(_clocks_counter+1)^0,f,c	;volatile
  3263   0010D2  0012               	return		;funcret
  3264   0010D4                     __end_of_my_Int1_Isr:
  3265                           	callstack 0
  3266                           
  3267                           ;
  3268                           ; H/W Interrupt Vector Table @ 0x8
  3269                           ;
  3270                           
  3271                           	psect	ivt0x8
  3272   000008                     __pivt0x8:
  3273                           	callstack 0
  3274   000008                     ivt0x8_base:
  3275                           	callstack 0
  3276                           
  3277                           ; high-priority vector
  3278   000008  EFBC  F006         	goto	_INTERRUPT_InterruptManagerHigh
  3279   000018                     	org	16
  3280                           
  3281                           ; low-priority vector
  3282   000018  EF04  F007         	goto	_INTERRUPT_InterruptManagerLow
  3283                           
  3284                           	psect	rparam
  3285   000000                     
  3286                           	psect	idloc
  3287                           
  3288                           ;Config register IDLOC0 @ 0x200000
  3289                           ;	unspecified, using default values
  3290   200000                     	org	2097152
  3291   200000  0FFF               	dw	4095
  3292                           
  3293                           ;Config register IDLOC1 @ 0x200002
  3294                           ;	unspecified, using default values
  3295   200002                     	org	2097154
  3296   200002  0FFF               	dw	4095
  3297                           
  3298                           ;Config register IDLOC2 @ 0x200004
  3299                           ;	unspecified, using default values
  3300   200004                     	org	2097156
  3301   200004  0FFF               	dw	4095
  3302                           
  3303                           ;Config register IDLOC3 @ 0x200006
  3304                           ;	unspecified, using default values
  3305   200006                     	org	2097158
  3306   200006  0FFF               	dw	4095
  3307                           
  3308                           ;Config register IDLOC4 @ 0x200008
  3309                           ;	unspecified, using default values
  3310   200008                     	org	2097160
  3311   200008  0FFF               	dw	4095
  3312                           
  3313                           ;Config register IDLOC5 @ 0x20000A
  3314                           ;	unspecified, using default values
  3315   20000A                     	org	2097162
  3316   20000A  0FFF               	dw	4095
  3317                           
  3318                           ;Config register IDLOC6 @ 0x20000C
  3319                           ;	unspecified, using default values
  3320   20000C                     	org	2097164
  3321   20000C  0FFF               	dw	4095
  3322                           
  3323                           ;Config register IDLOC7 @ 0x20000E
  3324                           ;	unspecified, using default values
  3325   20000E                     	org	2097166
  3326   20000E  0FFF               	dw	4095
  3327                           
  3328                           	psect	config
  3329                           
  3330                           ;Config register CONFIG1L @ 0x300000
  3331                           ;	External Oscillator Selection
  3332                           ;	FEXTOSC = OFF, Oscillator not enabled
  3333                           ;	Reset Oscillator Selection
  3334                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3335   300000                     	org	3145728
  3336   300000  8C                 	db	140
  3337                           
  3338                           ;Config register CONFIG1H @ 0x300001
  3339                           ;	Clock out Enable bit
  3340                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3341                           ;	PRLOCKED One-Way Set Enable bit
  3342                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  3343                           ;	Clock Switch Enable bit
  3344                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3345                           ;	Fail-Safe Clock Monitor Enable bit
  3346                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3347   300001                     	org	3145729
  3348   300001  FF                 	db	255
  3349                           
  3350                           ;Config register CONFIG2L @ 0x300002
  3351                           ;	MCLR Enable bit
  3352                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3353                           ;	Power-up timer selection bits
  3354                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3355                           ;	Multi-vector enable bit
  3356                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  3357                           ;	IVTLOCK bit One-way set enable bit
  3358                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  3359                           ;	Low Power BOR Enable bit
  3360                           ;	LPBOREN = OFF, ULPBOR disabled
  3361                           ;	Brown-out Reset Enable bits
  3362                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3363   300002                     	org	3145730
  3364   300002  F7                 	db	247
  3365                           
  3366                           ;Config register CONFIG2H @ 0x300003
  3367                           ;	Brown-out Reset Voltage Selection bits
  3368                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3369                           ;	ZCD Disable bit
  3370                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3371                           ;	PPSLOCK bit One-Way Set Enable bit
  3372                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3373                           ;	Stack Full/Underflow Reset Enable bit
  3374                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3375                           ;	Debugger Enable bit
  3376                           ;	DEBUG = OFF, Background debugger disabled
  3377                           ;	Extended Instruction Set Enable bit
  3378                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3379   300003                     	org	3145731
  3380   300003  FF                 	db	255
  3381                           
  3382                           ;Config register CONFIG3L @ 0x300004
  3383                           ;	WDT Period selection bits
  3384                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3385                           ;	WDT operating mode
  3386                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3387   300004                     	org	3145732
  3388   300004  9F                 	db	159
  3389                           
  3390                           ;Config register CONFIG3H @ 0x300005
  3391                           ;	WDT Window Select bits
  3392                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3393                           ;	WDT input clock selector
  3394                           ;	WDTCCS = SC, Software Control
  3395   300005                     	org	3145733
  3396   300005  FF                 	db	255
  3397                           
  3398                           ;Config register CONFIG4L @ 0x300006
  3399                           ;	Boot Block Size selection bits
  3400                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3401                           ;	Boot Block enable bit
  3402                           ;	BBEN = OFF, Boot block disabled
  3403                           ;	Storage Area Flash enable bit
  3404                           ;	SAFEN = OFF, SAF disabled
  3405                           ;	Application Block write protection bit
  3406                           ;	WRTAPP = OFF, Application Block not write protected
  3407   300006                     	org	3145734
  3408   300006  FF                 	db	255
  3409                           
  3410                           ;Config register CONFIG4H @ 0x300007
  3411                           ;	Configuration Register Write Protection bit
  3412                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  3413                           ;	Boot Block Write Protection bit
  3414                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  3415                           ;	Data EEPROM Write Protection bit
  3416                           ;	WRTD = OFF, Data EEPROM not write-protected
  3417                           ;	SAF Write protection bit
  3418                           ;	WRTSAF = OFF, SAF not Write Protected
  3419                           ;	Low Voltage Programming Enable bit
  3420                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3421   300007                     	org	3145735
  3422   300007  FF                 	db	255
  3423                           
  3424                           ;Config register CONFIG5L @ 0x300008
  3425                           ;	PFM and Data EEPROM Code Protection bit
  3426                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3427   300008                     	org	3145736
  3428   300008  FF                 	db	255
  3429                           
  3430                           ;Config register CONFIG5H @ 0x300009
  3431                           ;	unspecified, using default values
  3432   300009                     	org	3145737
  3433   300009  FF                 	db	255
  3434                           tosu	equ	0x3FFF
  3435                           tosh	equ	0x3FFE
  3436                           tosl	equ	0x3FFD
  3437                           stkptr	equ	0x3FFC
  3438                           pclatu	equ	0x3FFB
  3439                           pclath	equ	0x3FFA
  3440                           pcl	equ	0x3FF9
  3441                           tblptru	equ	0x3FF8
  3442                           tblptrh	equ	0x3FF7
  3443                           tblptrl	equ	0x3FF6
  3444                           tablat	equ	0x3FF5
  3445                           prodh	equ	0x3FF4
  3446                           prodl	equ	0x3FF3
  3447                           indf0	equ	0x3FEF
  3448                           postinc0	equ	0x3FEE
  3449                           postdec0	equ	0x3FED
  3450                           preinc0	equ	0x3FEC
  3451                           plusw0	equ	0x3FEB
  3452                           fsr0h	equ	0x3FEA
  3453                           fsr0l	equ	0x3FE9
  3454                           wreg	equ	0x3FE8
  3455                           indf1	equ	0x3FE7
  3456                           postinc1	equ	0x3FE6
  3457                           postdec1	equ	0x3FE5
  3458                           preinc1	equ	0x3FE4
  3459                           plusw1	equ	0x3FE3
  3460                           fsr1h	equ	0x3FE2
  3461                           fsr1l	equ	0x3FE1
  3462                           bsr	equ	0x3FE0
  3463                           indf2	equ	0x3FDF
  3464                           postinc2	equ	0x3FDE
  3465                           postdec2	equ	0x3FDD
  3466                           preinc2	equ	0x3FDC
  3467                           plusw2	equ	0x3FDB
  3468                           fsr2h	equ	0x3FDA
  3469                           fsr2l	equ	0x3FD9
  3470                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    64
    Data        0
    BSS         57
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      82
    BANK0           160     12      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), my_Int1_Isr(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), my_Int1_Isr(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_antiflicker_isr(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_antiflicker_isr(), TMR0_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_pwm_isr(), TMR2_DefaultInterruptHandler(), NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_pwm_isr(), TMR2_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_fading_isr(), TMR4_DefaultInterruptHandler(), NULL(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_fading_isr(), TMR4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    _TMR2_ISR->_my_pwm_isr

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR4_ISR->_my_fading_isr

Critical Paths under _main in BANK0

    _main->_my_delay
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2419
                                              6 BANK0      6     6      0
           _INT1_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                     _TMR0_StopTimer
           _TMR2_SetInterruptHandler
                 _TMR4_Period8BitSet
           _TMR4_SetInterruptHandler
                           _my_delay
 ---------------------------------------------------------------------------------
 (1) _my_delay                                             6     4      2     338
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _TMR4_Period8BitSet                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManagerLow                        3     3      0      30
                                             14 COMRAM     3     3      0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0      30
                                NULL *
       _TMR2_DefaultInterruptHandler *
                         _my_pwm_isr *
 ---------------------------------------------------------------------------------
 (6) _my_pwm_isr                                           4     4      0      30
                                             10 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
                 _my_antiflicker_isr *
 ---------------------------------------------------------------------------------
 (6) _my_antiflicker_isr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManagerHigh                       6     6      0     165
                                              4 COMRAM     6     6      0
                           _INT1_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR4_ISR                                             0     0      0     165
                                NULL *
       _TMR4_DefaultInterruptHandler *
                      _my_fading_isr *
 ---------------------------------------------------------------------------------
 (9) _my_fading_isr                                        4     4      0     165
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (9) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT1_CallBack                                        0     0      0       0
                                NULL *
       _INT1_DefaultInterruptHandler *
                        _my_Int1_Isr *
 ---------------------------------------------------------------------------------
 (10) _my_Int1_Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT1_SetInterruptHandler
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR0_StopTimer
   _TMR2_SetInterruptHandler
   _TMR4_Period8BitSet
   _TMR4_SetInterruptHandler
   _my_delay

 _INTERRUPT_InterruptManagerLow (ROOT)
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _my_antiflicker_isr *
   _TMR2_ISR
     NULL(Fake) *
     _TMR2_DefaultInterruptHandler *
     _my_pwm_isr *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _INT1_ISR
     _INT1_CallBack
       NULL(Fake) *
       _INT1_DefaultInterruptHandler *
       _my_Int1_Isr *
   _TMR4_ISR
     NULL(Fake) *
     _TMR4_DefaultInterruptHandler *
     _my_fading_isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      46        0.0%
BITBIGSFRlhhhhl    4DC      0       0      26        0.0%
BITBIGSFRllllll    183      0       0      44        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C       C       5        7.5%
BITBIGSFRllllhh     60      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      52       1       86.3%
BITBIGSFRlhhhl      3C      0       0      27        0.0%
BITBIGSFRhhh        2D      0       0      20        0.0%
BITBIGSFRllllll     18      0       0      38        0.0%
BITBIGSFRlhlh       15      0       0      29        0.0%
BITBIGSFRlllllh     11      0       0      37        0.0%
BITBIGSFRllllll      B      0       0      40        0.0%
BITBIGSFRllllll      B      0       0      42        0.0%
BITBIGSFRlllh        B      0       0      33        0.0%
BITBIGSFRhhlh        6      0       0      21        0.0%
BITBIGSFRlhhhhl      6      0       0      25        0.0%
BITBIGSFRlhhhhl      6      0       0      24        0.0%
BITBIGSFRhhll        6      0       0      22        0.0%
BITBIGSFRllhl        5      0       0      32        0.0%
BITBIGSFRlhll        5      0       0      30        0.0%
BITBIGSFRhl          5      0       0      23        0.0%
BITBIGSFRllhh        4      0       0      31        0.0%
BITBIGSFRlhhl        2      0       0      28        0.0%
BITBIGSFRllllll      1      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllhh      1      0       0      35        0.0%
BITBIGSFRllllhl      1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      45        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 28 16:51:52 2025

                    ??_TMR4_Period8BitSet 0060          __end_of_TMR2_SetInterruptHandler 119C  
                                      l59 0EDA                               _pwm_setting 0001  
                                     l110 116C                                       l113 10F6  
                                     l107 113A                                       l142 11BC  
                                     l136 10AC                                       l320 119A  
                                     l401 1190                                       l242 1154  
                                     l139 11C0                                       l236 11AE  
                                     l158 11A4                                       l520 09A6  
                                     l512 08E6                                       l513 0908  
                                     l505 08D2                                       l531 0A52  
                                     l515 090A                                       l507 08D4  
                                     l524 09BA                                       l516 090C  
                                     l277 1058                                       l525 09DA  
                                     l198 117A                                       l358 102A  
                                     l534 0A58                                       l391 1186  
                                     l493 0F0A                                       l496 0F28  
                                     _PR2 3FAB                                       _PR4 3F9F  
                                     u700 08AE                                       u701 08AA  
                                     u710 0908                                       u711 0904  
                                     u800 0A52                                       u720 0922  
                                     u801 0A4E                                       u721 0918  
                                     u810 0A6E                                       u730 0938  
                                     u811 0A6A                                       u731 0930  
                                     u820 0A7E                                       u740 094C  
                                     u821 0A7A                                       u741 0946  
                                     u750 09B4                                       u751 09B0  
                                     u760 09CC                                       u728 0926  
                                     u761 09C8                                       u690 0F28  
                                     u746 094E                                       u738 093C  
                                     u691 0F24                                       u837 0EF6  
                                     u790 0A32                                       u791 0A2E  
                                     u775 09D4                                       u784 0A08  
                                     u785 0A02                                       u777 09D6  
                         _TMR2_Initialize 102C                                       tosl 3FFD  
                                     wreg 3FE8                             _INT1_CallBack 105A  
                                    l1801 1156                                      l1811 1026  
                                    l1803 0FFE                                      l1821 1054  
                                    l1813 102C                                      l1805 1012  
                                    l1901 08F4                                      l1823 113C  
                                    l1831 1094                                      l1815 1040  
                                    l1807 1016                                      l1911 096C  
                                    l1903 08F8                                      l1825 1142  
                                    l1833 1098                                      l1817 1044  
                                    l1809 1018                                      l1841 111E  
                                    l1921 09CC                                      l1913 0976  
                                    l1905 090E                                      l1827 1150  
                                    l1835 109A                                      l1819 1046  
                                    l1851 1132                                      l1843 1122  
                                    l1923 09DE                                      l1907 0958  
                                    l1837 10A8                                      l1829 1088  
                                    l1781 1188                                      l1853 1136  
                                    l1845 1126                                      l1861 0EDC  
                                    l1941 0A3C                                      l1933 09F0  
                                    l1925 09E2                                      l1909 0962  
                                    l1917 0980                                      l1791 0ECC  
                                    l1783 0E74                                      l1775 119C  
                                    l1847 112A                                      l1839 111A  
                                    l1855 11BE                                      l1863 0EEA  
                                    l1951 0A7E                                      l1943 0A44  
                                    l1935 0A18                                      l1927 09EA  
                                    l1919 09B4                                      l1871 0846  
                                    l1777 11A6                                      l1793 0ECE  
                                    l1785 0EC6                                      l1849 112E  
                                    l1857 11BA                                      l1865 0F04  
                                    l1953 0A82                                      l1945 0A5A  
                                    l1937 0A24                                      l1873 0848  
                                    l1795 0ED0                                      l1787 0EC8  
                                    l1779 1192                                      l1859 1180  
                                    l1955 0A86                                      l1947 0A5E  
                                    l1939 0A32                                      l1883 088C  
                                    l1875 0882                                      l1797 116E  
                                    l1789 0ECA                                      l1949 0A6E  
                                    l1885 089C                                      l1877 0888  
                                    l1869 0842                                      l1799 10D4  
                                    l1895 08D6                                      l1887 089E  
                                    l1897 08E2                                      l1889 08AE  
                                    l1899 08E4                                      _LATA 3FBA  
                                    _LATB 3FBB                                      _LATC 3FBC  
                                    _T2PR 3FAB                                      _T4PR 3F9F  
                                    _PMD0 39C0                                      _PMD1 39C1  
                                    _PMD2 39C2                                      _PMD3 39C3  
                                    _PMD4 39C4                                      _PMD5 39C5  
                                    _PMD6 39C6                                      _PMD7 39C7  
                                    _TMR2 3FAA                                      _TMR4 3F9E  
                                    _WPUA 3A41                                      _WPUB 3A51  
                                    _WPUC 3A61                                      _WPUE 3A81  
                                    _main 0842                           _TMR0_StartTimer 11BE  
                                    fsr2h 3FDA                                      indf2 3FDF  
                                    fsr2l 3FD9                        _old_clocks_counter 0031  
                                    prodl 3FF3                                      start 001C  
              ??_TMR4_SetInterruptHandler 0062                              ___param_bank 0000  
                 __end_of_TMR0_Initialize 10AE                          __end_of_INT1_ISR 11BA  
          ??_TMR0_DefaultInterruptHandler 0044             __end_of_OSCILLATOR_Initialize 116E  
                                   ?_main 003A                                     _T2CON 3FAC  
                                   _T4CON 3FA0                                     _T2HLT 3FAD  
                                   _T4HLT 3FA1                                     i1l212 0E40  
                                   _T2TMR 3FAA                                     i1l216 0E60  
                                   i1l161 11C4                                     _T2RST 3FAF  
                                   i1l155 0FCA                                     i1l323 11C2  
                                   i1l317 0F98                                     i2l203 0DC2  
                                   _T4TMR 3F9E                                     i2l207 0DE2  
                                   i1l456 0F5E                                     i2l233 1086  
                                   i1l458 0F66                                     i1l490 0CA0  
                                   _T4RST 3FA3                                     i2l404 11C6  
                                   i2l229 11B8                                     i2l239 11C8  
                                   i2l452 10CE                                     i2l453 10D2  
                                   i2l467 0D76                                     i2l398 0FFC  
                                   _OSCEN 39DD                                     _TMR0H 3FB7  
                                   _TMR0L 3FB6                                     _TRISA 3FC2  
                                   _TRISB 3FC3                                     _TRISC 3FC4  
                         _TMR4_Initialize 0FFE                 ?_TMR0_SetInterruptHandler 0060  
                        __end_of_TMR0_ISR 0FCC                          __end_of_TMR2_ISR 0F9A  
                        __end_of_TMR4_ISR 0FFE                            ?_INT1_CallBack 003A  
             TMR4_Period8BitSet@periodVal 0060            ??_INT1_DefaultInterruptHandler 003A  
                                   main@i 006B                  _INT1_SetInterruptHandler 11A6  
                                   pclath 3FFA                                     pclatu 3FFB  
                                   tablat 3FF5                                     status 3FD8  
                            ?_my_Int1_Isr 003A            ?_INTERRUPT_InterruptManagerLow 003A  
                        main@fading_level 0069                           __initialization 10F8  
                            __end_of_main 0A90                   __end_of_TMR2_Initialize 105A  
                _TMR2_SetInterruptHandler 1192                                    ??_main 0066  
                           __activetblptr 0002                   __end_of_TMR0_StartTimer 11C2  
                                  _ANSELA 3A40                                    _ANSELB 3A50  
                                  _ANSELC 3A60                                    _T0CON0 3FB8  
                                  _T0CON1 3FB9                                    _RB1I2C 3A5A  
                                  _RB2I2C 3A5B                                    _RC3I2C 3A6A  
                                  _RC4I2C 3A6B                                    i1l1331 0AD2  
                                  i1l1323 0A90                                    i1l1421 0F9E  
                                  i1l1341 0B10                                    i1l1333 0AD4  
                                  i1l1325 0A98                                    i1l1423 0FB0  
                                  i1l1351 0B68                                    i1l1343 0B2C  
                                  i1l1335 0AF0                                    i1l1327 0AB4  
                                  i1l1361 0BA6                                    i1l1353 0B6A  
                                  i1l1345 0B2E                                    i1l1337 0AF2  
                                  i1l1329 0AB6                                    _ODCONA 3A42  
                                  _ODCONB 3A52                                    i1l1419 0F9A  
                                  i1l1371 0BFE                                    i1l1363 0BC2  
                                  i1l1355 0B86                                    i1l1347 0B4A  
                                  i1l1339 0B0E                                    i1l1435 0F68  
                                  _ODCONC 3A62                                    i1l1293 0F2A  
                                  i1l1381 0C3C                                    i1l1373 0C00  
                                  i1l1365 0BC4                                    i1l1357 0B88  
                                  i1l1349 0B4C                                    i1l1437 0F6C  
                                  i1l1295 0F42                                    i1l1391 0C7E  
                                  i1l1383 0C58                                    i1l1375 0C1C  
                                  i1l1367 0BE0                                    i1l1359 0BA4  
                                  i1l1439 0F7E                                    i1l1297 0F4A  
                                  i1l1393 0C84                                    i1l1385 0C5A  
                                  i1l1377 0C1E                                    i1l1369 0BE2  
                                  i1l1395 0C96                                    i1l1387 0C76  
                                  i1l1379 0C3A                                    i1l1491 0E1A  
                                  i1l1397 0C9E                                    i1l1389 0C78  
                                  i1l1493 0E2A                                    i1l1495 0E38  
                                  i1l1497 0E4E                                    i1l1499 0E5C  
                                  i2l1231 10CC                                    i2l1311 0D00  
                                  i2l1225 10AE                                    i2l1321 0D66  
                                  i2l1313 0D3C                                    i2l1305 0CA6  
                                  i2l1227 10B8                                    i2l1315 0D56  
                                  i2l1307 0CDE                                    i2l1229 10C6  
                                  i2l1309 0CF6                                    i2l1319 0D64  
                                  i2l1431 0FD0                                    i2l1425 11B0  
                                  i2l1433 0FE2                                    i2l1291 106C  
                                  i2l1427 11B4                                    i2l1429 0FCC  
                                  i2l1289 105A                                    i2l1481 0D9C  
                                  i2l1299 0CA2                                    i2l1483 0DAC  
                                  i2l1485 0DBA                                    i2l1487 0DD0  
                                  i2l1489 0DDE                                    _INLVLA 3A44  
                                  _INLVLB 3A54                                    _INLVLC 3A64  
                                  _INLVLE 3A84                                    _OSCFRQ 39DF  
                                  i1u4_20 0F42                                    i1u4_21 0F3E  
                                  i2u1_40 10C6                                    i2u1_41 10C2  
                                  i2u2_40 106C                                    i2u2_41 1068  
                                  i2u3_48 1072                                    i2u3_49 1086  
                                  i2u5_44 0CBE                                    i2u5_45 0CB8  
                                  i2u6_40 0CDE                                    i2u6_41 0CDA  
                                  i2u7_40 0CF6                                    i2u7_41 0CF2  
                                  i2u8_40 0D56                                    i2u8_41 0D52  
                                  i2u9_40 0D76                                    i2u9_41 0D72  
                   __end_of_my_fading_isr 0D78                __end_of_my_antiflicker_isr 0F68  
                        ?_TMR0_Initialize 003A                   __end_of_TMR4_Initialize 102C  
                                  clear_0 10FE                                    isa$std 0001  
    __end_of_TMR4_DefaultInterruptHandler 11C8              _TMR4_DefaultInterruptHandler 11C6  
                        __end_of_my_delay 0F2A                            _PMD_Initialize 10D4  
                         ??_INT1_CallBack 003A                              __mediumconst 0000  
                                  tblptrh 3FF7                                    tblptrl 3FF6  
                                  tblptru 3FF8  TMR4_SetInterruptHandler@InterruptHandler 0060  
TMR2_SetInterruptHandler@InterruptHandler 0060  INT1_SetInterruptHandler@InterruptHandler 0060  
TMR0_SetInterruptHandler@InterruptHandler 0060          ??_INTERRUPT_InterruptManagerHigh 003E  
         ?_INTERRUPT_InterruptManagerHigh 003A                         _SYSTEM_Initialize 111A  
                              __accesstop 0060                   __end_of__initialization 1110  
                               ?_INT1_ISR 003A                        ?_SYSTEM_Initialize 003A  
                           ___rparam_used 0001                            __pcstackCOMRAM 003A  
                     ??_SYSTEM_Initialize 0062                                 ?_TMR0_ISR 003A  
                               ?_TMR2_ISR 003A                                 ?_TMR4_ISR 003A  
                        ?_TMR2_Initialize 003A                    __end_of_PMD_Initialize 10F8  
           ?_TMR4_DefaultInterruptHandler 003A                          ?_TMR0_StartTimer 003A  
               __end_of_SYSTEM_Initialize 113C                                ??_INT1_ISR 003A  
                              __pnvCOMRAM 004B                     _TMR4_InterruptHandler 004B  
                                 IVTBASEH 3FD6                                   IVTBASEL 3FD5  
                                 IVTBASEU 3FD7          __end_of_TMR0_SetInterruptHandler 11A6  
                              ??_TMR0_ISR 0044                                ??_TMR2_ISR 0048  
                              ??_TMR4_ISR 003E                           my_fading_isr@io 003D  
                        ?_TMR4_Initialize 003A                           ?_PMD_Initialize 003A  
              ??_INT1_SetInterruptHandler 0062                                   _INT1PPS 3AC1  
                                 _OSCCON1 39D9                                   _OSCCON3 39DB  
                                 i1u10_20 0AB4                                   i1u10_21 0AB0  
                                 i1u11_20 0AD2                                   i1u11_21 0ACE  
                                 i1u20_20 0BE0                                   i1u12_20 0AF0  
                                 i1u20_21 0BDC                                   i1u12_21 0AEC  
                                 i1u21_20 0BFE                                   i1u13_20 0B0E  
                                 i1u21_21 0BFA                                   i1u13_21 0B0A  
                                 i1u22_20 0C1C                                   i1u14_20 0B2C  
                                 i1u22_21 0C18                                   i1u14_21 0B28  
                                 i1u23_20 0C3A                                   i1u15_20 0B4A  
                                 i1u31_20 0F7E                                   i1u23_21 0C36  
                                 i1u15_21 0B46                                   i1u31_21 0F7A  
                                 i1u24_20 0C58                                   i1u16_20 0B68  
                                 i1u40_20 0E4E                                   i1u24_21 0C54  
                                 i1u16_21 0B64                                   i1u40_21 0E4A  
                                 i1u25_20 0C76                                   i1u17_20 0B86  
                                 i1u32_28 0F84                                   i1u41_20 0E5C  
                                 i1u25_21 0C72                                   i1u17_21 0B82  
                                 i1u32_29 0F98                                   i1u41_21 0E58  
                                 i1u26_20 0C96                                   i1u18_20 0BA4  
                                 i1u26_21 0C92                                   i1u18_21 0BA0  
                                 i1u27_20 0FB0                                   i1u19_20 0BC2  
                                 i1u27_21 0FAC                                   i1u19_21 0BBE  
                                 i1u28_28 0FB6                                   i1u28_29 0FCA  
                                 i1u38_20 0E2A                                   i1u38_21 0E26  
                                 i1u39_20 0E38                                   i1u39_21 0E34  
                                 i2u30_48 0FE8                                   i2u30_49 0FFC  
                                 i2u34_40 0DAC                                   i2u34_41 0DA8  
                                 i2u35_40 0DBA                                   i2u35_41 0DB6  
                                 i2u36_40 0DD0                                   i2u36_41 0DCC  
                                 i2u29_40 0FE2                                   i2u37_40 0DDE  
                                 i2u29_41 0FDE                                   i2u37_41 0DDA  
                                 _OSCTUNE 39DE                                   _SLRCONA 3A43  
                                 _SLRCONB 3A53                                   _SLRCONC 3A63  
                       my_pwm_isr@pwm_cnt 0039                                   __Hparam 0000  
                               ?_my_delay 0060                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0062                               my_delay@val 0060  
                              _lampstatus 0035                              __psmallconst 0800  
                                 __pcinit 10F8                                   __ramtop 0800  
                                 __ptext0 0842                                   __ptext1 0EDC  
                                 __ptext2 117C                                   __ptext3 11BA  
                                 __ptext4 11BE                                   __ptext5 111A  
                                 __ptext6 0FFE                                   __ptext7 1188  
                                 __ptext8 102C                                   __ptext9 1192  
                   _OSCILLATOR_Initialize 1156                                 _T2CONbits 3FAC  
                               _T4CONbits 3FA0                  ??_PIN_MANAGER_Initialize 0060  
                               _T2HLTbits 3FAD                 ?_TMR4_SetInterruptHandler 0060  
                               _T4HLTbits 3FA1                      end_of_initialization 1110  
                               _T2RSTbits 3FAF            ??_TMR4_DefaultInterruptHandler 003A  
                               _T4RSTbits 3FA3                             __Lmediumconst 0000  
                              ??_my_delay 0062                                   postdec2 3FDD  
                                 postinc0 3FEE                                   postinc2 3FDE  
                       __end_of_pwm_table 0841                                _my_pwm_isr 0A90  
                _TMR0_SetInterruptHandler 119C                     _INT1_InterruptHandler 004F  
                               _PORTBbits 3FCB                        _my_antiflicker_isr 0F2A  
                     ?_my_antiflicker_isr 003A                            _TMR0_StopTimer 11BA  
            __end_of_INTERRUPT_Initialize 117C      __end_of_TMR2_DefaultInterruptHandler 11C4  
            _TMR2_DefaultInterruptHandler 11C2                      ??_my_antiflicker_isr 0044  
                  ?_OSCILLATOR_Initialize 003A                       start_initialization 10F8  
                   __end_of_INT1_CallBack 1088                                ivt0x8_base 0008  
                  __end_of_TMR0_StopTimer 11BE                          ??_PMD_Initialize 0060  
                             ?_my_pwm_isr 003A                __end_of_EXT_INT_Initialize 1156  
           ?_TMR2_DefaultInterruptHandler 003A                               __pbssCOMRAM 0001  
                           __pcstackBANK0 0060                             ??_my_Int1_Isr 003A  
                   _TMR0_InterruptHandler 0051                             _my_fading_isr 0CA2  
                         ?_TMR0_StopTimer 003A                __end_of_TMR4_Period8BitSet 1188  
                  _PIN_MANAGER_Initialize 0E74          __end_of_TMR4_SetInterruptHandler 1192  
                             __smallconst 0800                            _clocks_counter 0033  
                                _T2CLKCON 3FAE                                  _T4CLKCON 3FA2  
                    _INTERRUPT_Initialize 116E                         ??_TMR0_Initialize 0062  
                                _INT1_ISR 11B0                                  _LATBbits 3FBB  
                          ?_my_fading_isr 003A                 ?_INT1_SetInterruptHandler 0060  
                                _IPR3bits 3983                                  _IPR4bits 3984  
                                _PIE3bits 3993                                  _IPR5bits 3985  
                                _PIE4bits 3994                                  _IPR7bits 3987  
                                _PIE5bits 3995                                  _PIE7bits 3997  
              ??_TMR0_SetInterruptHandler 0062                                  _PIR3bits 39A3  
                                _PIR4bits 39A4                                  _PIR5bits 39A5  
                                _PIR7bits 39A7                       __end_of_my_Int1_Isr 10D4  
                                _TMR0_ISR 0F9A                                  _TMR2_ISR 0F68  
                                _TMR4_ISR 0FCC                                 _pwm_table 0801  
                               _pwm_phase 0021            ??_TMR2_DefaultInterruptHandler 0044  
               ?_TMR2_SetInterruptHandler 0060                               _INTCON0bits 3FD2  
                   ?_INTERRUPT_Initialize 003A                         ??_TMR2_Initialize 0062  
                                __Hrparam 0000                                  __Lrparam 0000  
                 ??_OSCILLATOR_Initialize 0060                         ??_TMR0_StartTimer 0060  
                _TMR4_SetInterruptHandler 1188                                _T0CON0bits 3FB8  
         ??_INTERRUPT_InterruptManagerLow 0048                                  __pivt0x8 0008  
                                __ptext10 1088                                  __ptext11 119C  
                                __ptext20 11C2                                  __ptext12 10D4  
                                __ptext21 0A90                                  __ptext13 0E74  
                                __ptext30 105A                                  __ptext22 0F9A  
                                __ptext14 1156                                  __ptext31 11C8  
                                __ptext23 11C4                                  __ptext15 116E  
                                __ptext32 10AE                                  __ptext24 0F2A  
                                __ptext16 113C                                  __ptext25 0D78  
                                __ptext17 11A6                                  __ptext26 0FCC  
                                __ptext18 0E08                                  __ptext27 11C6  
                                __ptext19 0F68                                  __ptext28 0CA2  
                                __ptext29 11B0                                  _lampdata 0037  
                         ??_my_fading_isr 003A                                 my_delay@i 0064  
                       ??_TMR4_Initialize 0062                               _my_Int1_Isr 10AE  
    __end_of_TMR0_DefaultInterruptHandler 11C6              _TMR0_DefaultInterruptHandler 11C4  
                                _my_delay 0EDC                                  isa$xinst 0000  
                            ??_my_pwm_isr 0044                                  main@mode 006A  
    __end_of_INT1_DefaultInterruptHandler 11CA              _INT1_DefaultInterruptHandler 11C8  
                  ??_INTERRUPT_Initialize 0060                        _EXT_INT_Initialize 113C  
                                intlevel1 0000                                  intlevel2 0000  
                        ??_TMR0_StopTimer 0060                   ?_PIN_MANAGER_Initialize 003A  
                          my_pwm_isr@tmp1 0046                            my_pwm_isr@tmp2 0047  
                      __end_of_my_pwm_isr 0CA2                       ?_EXT_INT_Initialize 003A  
           ?_TMR0_DefaultInterruptHandler 003A    __end_of_INTERRUPT_InterruptManagerHigh 0E08  
          _INTERRUPT_InterruptManagerHigh 0D78                        _TMR4_Period8BitSet 117C  
                    ??_EXT_INT_Initialize 0062             ?_INT1_DefaultInterruptHandler 003A  
                         _TMR0_Initialize 1088          __end_of_INT1_SetInterruptHandler 11B0  
                     ?_TMR4_Period8BitSet 003A     __end_of_INTERRUPT_InterruptManagerLow 0E74  
           _INTERRUPT_InterruptManagerLow 0E08            __end_of_PIN_MANAGER_Initialize 0EDC  
                   _TMR2_InterruptHandler 004D  
